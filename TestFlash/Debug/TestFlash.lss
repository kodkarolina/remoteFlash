
TestFlash.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000013e8  0000147c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003f  0080006c  0080006c  00001488  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00001520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bea  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000074b  00000000  00000000  000021aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b3  00000000  00000000  000028f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00002ea8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000480  00000000  00000000  00003050  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000593  00000000  00000000  000034d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003a63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	ad c0       	rjmp	.+346    	; 0x15e <__bad_interrupt>
       4:	ac c0       	rjmp	.+344    	; 0x15e <__bad_interrupt>
       6:	ab c0       	rjmp	.+342    	; 0x15e <__bad_interrupt>
       8:	aa c0       	rjmp	.+340    	; 0x15e <__bad_interrupt>
       a:	a9 c0       	rjmp	.+338    	; 0x15e <__bad_interrupt>
       c:	a8 c0       	rjmp	.+336    	; 0x15e <__bad_interrupt>
       e:	a7 c0       	rjmp	.+334    	; 0x15e <__bad_interrupt>
      10:	a6 c0       	rjmp	.+332    	; 0x15e <__bad_interrupt>
      12:	a5 c0       	rjmp	.+330    	; 0x15e <__bad_interrupt>
      14:	a4 c0       	rjmp	.+328    	; 0x15e <__bad_interrupt>
      16:	d6 c1       	rjmp	.+940    	; 0x3c4 <__vector_11>
      18:	13 c2       	rjmp	.+1062   	; 0x440 <__vector_12>
      1a:	a1 c0       	rjmp	.+322    	; 0x15e <__bad_interrupt>
      1c:	a0 c0       	rjmp	.+320    	; 0x15e <__bad_interrupt>
      1e:	9f c0       	rjmp	.+318    	; 0x15e <__bad_interrupt>
      20:	9e c0       	rjmp	.+316    	; 0x15e <__bad_interrupt>
      22:	9d c0       	rjmp	.+314    	; 0x15e <__bad_interrupt>
      24:	9c c0       	rjmp	.+312    	; 0x15e <__bad_interrupt>

00000026 <__trampolines_end>:
      26:	6e 61       	ori	r22, 0x1E	; 30
      28:	6e 00       	.word	0x006e	; ????

0000002a <__c.2332>:
      2a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      3a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      4a:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      5a:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      6a:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      7a:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      8a:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      9a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      aa:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      ba:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      ca:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
      da:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
      ea:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
      fa:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     10a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     11a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf e5       	ldi	r28, 0x5F	; 95
     12e:	d4 e0       	ldi	r29, 0x04	; 4
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61

00000134 <__do_copy_data>:
     134:	10 e0       	ldi	r17, 0x00	; 0
     136:	a0 e6       	ldi	r26, 0x60	; 96
     138:	b0 e0       	ldi	r27, 0x00	; 0
     13a:	e8 ee       	ldi	r30, 0xE8	; 232
     13c:	f3 e1       	ldi	r31, 0x13	; 19
     13e:	02 c0       	rjmp	.+4      	; 0x144 <__do_copy_data+0x10>
     140:	05 90       	lpm	r0, Z+
     142:	0d 92       	st	X+, r0
     144:	ac 36       	cpi	r26, 0x6C	; 108
     146:	b1 07       	cpc	r27, r17
     148:	d9 f7       	brne	.-10     	; 0x140 <__do_copy_data+0xc>

0000014a <__do_clear_bss>:
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	ac e6       	ldi	r26, 0x6C	; 108
     14e:	b0 e0       	ldi	r27, 0x00	; 0
     150:	01 c0       	rjmp	.+2      	; 0x154 <.do_clear_bss_start>

00000152 <.do_clear_bss_loop>:
     152:	1d 92       	st	X+, r1

00000154 <.do_clear_bss_start>:
     154:	ab 3a       	cpi	r26, 0xAB	; 171
     156:	b2 07       	cpc	r27, r18
     158:	e1 f7       	brne	.-8      	; 0x152 <.do_clear_bss_loop>
     15a:	07 d1       	rcall	.+526    	; 0x36a <main>
     15c:	43 c9       	rjmp	.-3450   	; 0xfffff3e4 <__eeprom_end+0xff7ef3e4>

0000015e <__bad_interrupt>:
     15e:	50 cf       	rjmp	.-352    	; 0x0 <__vectors>

00000160 <dtmsplit>:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void dtmsplit(char *str, const char *delim, char ***array, uint16_t *length) {
     160:	6f 92       	push	r6
     162:	7f 92       	push	r7
     164:	8f 92       	push	r8
     166:	9f 92       	push	r9
     168:	af 92       	push	r10
     16a:	bf 92       	push	r11
     16c:	cf 92       	push	r12
     16e:	df 92       	push	r13
     170:	ef 92       	push	r14
     172:	ff 92       	push	r15
     174:	0f 93       	push	r16
     176:	1f 93       	push	r17
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
     17c:	8c 01       	movw	r16, r24
     17e:	5b 01       	movw	r10, r22
     180:	4a 01       	movw	r8, r20
     182:	39 01       	movw	r6, r18
	uint16_t i = 0;
	char *token;
	char **res = (char **)malloc(0 * sizeof(char *));
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	31 d5       	rcall	.+2658   	; 0xbec <malloc>
     18a:	ec 01       	movw	r28, r24
	
	token = strtok(str, delim);
     18c:	b5 01       	movw	r22, r10
     18e:	c8 01       	movw	r24, r16
     190:	33 d8       	rcall	.-3994   	; 0xfffff1f8 <__eeprom_end+0xff7ef1f8>
     192:	8c 01       	movw	r16, r24
	while (token != NULL)
     194:	89 2b       	or	r24, r25
     196:	e9 f0       	breq	.+58     	; 0x1d2 <dtmsplit+0x72>
     198:	c1 2c       	mov	r12, r1
     19a:	d1 2c       	mov	r13, r1
     19c:	e1 2c       	mov	r14, r1
     19e:	f1 2c       	mov	r15, r1
	{
		res = (char **)realloc(res, (i + 1) * sizeof(char *));
     1a0:	8f ef       	ldi	r24, 0xFF	; 255
     1a2:	e8 1a       	sub	r14, r24
     1a4:	f8 0a       	sbc	r15, r24
     1a6:	b7 01       	movw	r22, r14
     1a8:	66 0f       	add	r22, r22
     1aa:	77 1f       	adc	r23, r23
     1ac:	ce 01       	movw	r24, r28
     1ae:	3f d6       	rcall	.+3198   	; 0xe2e <realloc>
     1b0:	ec 01       	movw	r28, r24
		res[i] = token;
     1b2:	fc 01       	movw	r30, r24
     1b4:	ec 0d       	add	r30, r12
     1b6:	fd 1d       	adc	r31, r13
     1b8:	11 83       	std	Z+1, r17	; 0x01
     1ba:	00 83       	st	Z, r16
		i++;
		token = strtok(NULL, delim);
     1bc:	b5 01       	movw	r22, r10
     1be:	80 e0       	ldi	r24, 0x00	; 0
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	1a d8       	rcall	.-4044   	; 0xfffff1f8 <__eeprom_end+0xff7ef1f8>
     1c4:	8c 01       	movw	r16, r24
     1c6:	e2 e0       	ldi	r30, 0x02	; 2
     1c8:	ce 0e       	add	r12, r30
     1ca:	d1 1c       	adc	r13, r1
	uint16_t i = 0;
	char *token;
	char **res = (char **)malloc(0 * sizeof(char *));
	
	token = strtok(str, delim);
	while (token != NULL)
     1cc:	89 2b       	or	r24, r25
     1ce:	41 f7       	brne	.-48     	; 0x1a0 <dtmsplit+0x40>
     1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <dtmsplit+0x76>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void dtmsplit(char *str, const char *delim, char ***array, uint16_t *length) {
	uint16_t i = 0;
     1d2:	e1 2c       	mov	r14, r1
     1d4:	f1 2c       	mov	r15, r1
		res = (char **)realloc(res, (i + 1) * sizeof(char *));
		res[i] = token;
		i++;
		token = strtok(NULL, delim);
	}
	*array = res;
     1d6:	f4 01       	movw	r30, r8
     1d8:	d1 83       	std	Z+1, r29	; 0x01
     1da:	c0 83       	st	Z, r28
	*length = i;
     1dc:	f3 01       	movw	r30, r6
     1de:	f1 82       	std	Z+1, r15	; 0x01
     1e0:	e0 82       	st	Z, r14
}
     1e2:	df 91       	pop	r29
     1e4:	cf 91       	pop	r28
     1e6:	1f 91       	pop	r17
     1e8:	0f 91       	pop	r16
     1ea:	ff 90       	pop	r15
     1ec:	ef 90       	pop	r14
     1ee:	df 90       	pop	r13
     1f0:	cf 90       	pop	r12
     1f2:	bf 90       	pop	r11
     1f4:	af 90       	pop	r10
     1f6:	9f 90       	pop	r9
     1f8:	8f 90       	pop	r8
     1fa:	7f 90       	pop	r7
     1fc:	6f 90       	pop	r6
     1fe:	08 95       	ret

00000200 <getAllButFirstAndLast>:



char * getAllButFirstAndLast(char *input)
{
	uint16_t len = strlen(input);
     200:	fc 01       	movw	r30, r24
     202:	01 90       	ld	r0, Z+
     204:	00 20       	and	r0, r0
     206:	e9 f7       	brne	.-6      	; 0x202 <getAllButFirstAndLast+0x2>
     208:	31 97       	sbiw	r30, 0x01	; 1
     20a:	e8 1b       	sub	r30, r24
     20c:	f9 0b       	sbc	r31, r25
	if (len > 0)
     20e:	41 f0       	breq	.+16     	; 0x220 <getAllButFirstAndLast+0x20>
	input++;//Go past the first char
     210:	01 96       	adiw	r24, 0x01	; 1
	if (len > 1)
     212:	e2 30       	cpi	r30, 0x02	; 2
     214:	f1 05       	cpc	r31, r1
     216:	20 f0       	brcs	.+8      	; 0x220 <getAllButFirstAndLast+0x20>
	input[len - 2] = '\0';//Replace the last char with a null termination
     218:	e8 0f       	add	r30, r24
     21a:	f9 1f       	adc	r31, r25
     21c:	32 97       	sbiw	r30, 0x02	; 2
     21e:	10 82       	st	Z, r1
	return input;
}
     220:	08 95       	ret

00000222 <parse_STypeInput>:


void parse_STypeInput(char *input, uint16_t data[7]){
     222:	ef 92       	push	r14
     224:	ff 92       	push	r15
     226:	0f 93       	push	r16
     228:	1f 93       	push	r17
     22a:	cf 93       	push	r28
     22c:	df 93       	push	r29
     22e:	00 d0       	rcall	.+0      	; 0x230 <parse_STypeInput+0xe>
     230:	00 d0       	rcall	.+0      	; 0x232 <parse_STypeInput+0x10>
     232:	00 d0       	rcall	.+0      	; 0x234 <parse_STypeInput+0x12>
     234:	cd b7       	in	r28, 0x3d	; 61
     236:	de b7       	in	r29, 0x3e	; 62
     238:	8b 01       	movw	r16, r22
	uint32_t preskalerData; 

	char **messageSplited = NULL;
     23a:	1a 82       	std	Y+2, r1	; 0x02
     23c:	19 82       	std	Y+1, r1	; 0x01
	char **tmp = NULL;
     23e:	1c 82       	std	Y+4, r1	; 0x04
     240:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t count = 0;
     242:	1e 82       	std	Y+6, r1	; 0x06
     244:	1d 82       	std	Y+5, r1	; 0x05
	char *pMod = getAllButFirstAndLast(input);
     246:	dc df       	rcall	.-72     	; 0x200 <getAllButFirstAndLast>
	dtmsplit(pMod, "_", &messageSplited, &count);
     248:	9e 01       	movw	r18, r28
     24a:	2b 5f       	subi	r18, 0xFB	; 251
     24c:	3f 4f       	sbci	r19, 0xFF	; 255
     24e:	ae 01       	movw	r20, r28
     250:	4f 5f       	subi	r20, 0xFF	; 255
     252:	5f 4f       	sbci	r21, 0xFF	; 255
     254:	67 e6       	ldi	r22, 0x67	; 103
     256:	70 e0       	ldi	r23, 0x00	; 0
     258:	83 df       	rcall	.-250    	; 0x160 <dtmsplit>

	uint16_t overFlowCounter = 0;
	dtmsplit(messageSplited[0], ",", &tmp, &count);
     25a:	e9 81       	ldd	r30, Y+1	; 0x01
     25c:	fa 81       	ldd	r31, Y+2	; 0x02
     25e:	9e 01       	movw	r18, r28
     260:	2b 5f       	subi	r18, 0xFB	; 251
     262:	3f 4f       	sbci	r19, 0xFF	; 255
     264:	ae 01       	movw	r20, r28
     266:	4d 5f       	subi	r20, 0xFD	; 253
     268:	5f 4f       	sbci	r21, 0xFF	; 255
     26a:	69 e6       	ldi	r22, 0x69	; 105
     26c:	70 e0       	ldi	r23, 0x00	; 0
     26e:	80 81       	ld	r24, Z
     270:	91 81       	ldd	r25, Z+1	; 0x01
     272:	76 df       	rcall	.-276    	; 0x160 <dtmsplit>
	preskalerData = atol(tmp[0]);
     274:	eb 80       	ldd	r14, Y+3	; 0x03
     276:	fc 80       	ldd	r15, Y+4	; 0x04
     278:	f7 01       	movw	r30, r14
     27a:	80 81       	ld	r24, Z
     27c:	91 81       	ldd	r25, Z+1	; 0x01
     27e:	b3 d6       	rcall	.+3430   	; 0xfe6 <atol>
	if (preskalerData > 65535){
     280:	61 15       	cp	r22, r1
     282:	71 05       	cpc	r23, r1
     284:	f1 e0       	ldi	r31, 0x01	; 1
     286:	8f 07       	cpc	r24, r31
     288:	91 05       	cpc	r25, r1
     28a:	78 f0       	brcs	.+30     	; 0x2aa <parse_STypeInput+0x88>
     28c:	20 e0       	ldi	r18, 0x00	; 0
     28e:	30 e0       	ldi	r19, 0x00	; 0
		while (preskalerData > 65535){
			preskalerData = preskalerData - 65335;
     290:	67 53       	subi	r22, 0x37	; 55
     292:	7f 4f       	sbci	r23, 0xFF	; 255
     294:	81 09       	sbc	r24, r1
     296:	91 09       	sbc	r25, r1
			overFlowCounter++;
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255

	uint16_t overFlowCounter = 0;
	dtmsplit(messageSplited[0], ",", &tmp, &count);
	preskalerData = atol(tmp[0]);
	if (preskalerData > 65535){
		while (preskalerData > 65535){
     29c:	61 15       	cp	r22, r1
     29e:	71 05       	cpc	r23, r1
     2a0:	41 e0       	ldi	r20, 0x01	; 1
     2a2:	84 07       	cpc	r24, r20
     2a4:	91 05       	cpc	r25, r1
     2a6:	a0 f7       	brcc	.-24     	; 0x290 <parse_STypeInput+0x6e>
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <parse_STypeInput+0x8c>
	char **tmp = NULL;
	uint16_t count = 0;
	char *pMod = getAllButFirstAndLast(input);
	dtmsplit(pMod, "_", &messageSplited, &count);

	uint16_t overFlowCounter = 0;
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
		while (preskalerData > 65535){
			preskalerData = preskalerData - 65335;
			overFlowCounter++;
		}
	}
	data[0] = (uint16_t)preskalerData;
     2ae:	f8 01       	movw	r30, r16
     2b0:	71 83       	std	Z+1, r23	; 0x01
     2b2:	60 83       	st	Z, r22
	data[1] = overFlowCounter;
     2b4:	33 83       	std	Z+3, r19	; 0x03
     2b6:	22 83       	std	Z+2, r18	; 0x02
	data[2] = atoi(tmp[1]);
     2b8:	f7 01       	movw	r30, r14
     2ba:	82 81       	ldd	r24, Z+2	; 0x02
     2bc:	93 81       	ldd	r25, Z+3	; 0x03
     2be:	76 d6       	rcall	.+3308   	; 0xfac <atoi>
     2c0:	f8 01       	movw	r30, r16
     2c2:	95 83       	std	Z+5, r25	; 0x05
     2c4:	84 83       	std	Z+4, r24	; 0x04
	overFlowCounter = 0;
	dtmsplit(messageSplited[1], ",", &tmp, &count);
     2c6:	e9 81       	ldd	r30, Y+1	; 0x01
     2c8:	fa 81       	ldd	r31, Y+2	; 0x02
     2ca:	9e 01       	movw	r18, r28
     2cc:	2b 5f       	subi	r18, 0xFB	; 251
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	ae 01       	movw	r20, r28
     2d2:	4d 5f       	subi	r20, 0xFD	; 253
     2d4:	5f 4f       	sbci	r21, 0xFF	; 255
     2d6:	69 e6       	ldi	r22, 0x69	; 105
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	82 81       	ldd	r24, Z+2	; 0x02
     2dc:	93 81       	ldd	r25, Z+3	; 0x03
     2de:	40 df       	rcall	.-384    	; 0x160 <dtmsplit>
	preskalerData = atol(tmp[0]);
     2e0:	eb 80       	ldd	r14, Y+3	; 0x03
     2e2:	fc 80       	ldd	r15, Y+4	; 0x04
     2e4:	f7 01       	movw	r30, r14
     2e6:	80 81       	ld	r24, Z
     2e8:	91 81       	ldd	r25, Z+1	; 0x01
     2ea:	7d d6       	rcall	.+3322   	; 0xfe6 <atol>
	if (preskalerData > 65535){
     2ec:	61 15       	cp	r22, r1
     2ee:	71 05       	cpc	r23, r1
     2f0:	f1 e0       	ldi	r31, 0x01	; 1
     2f2:	8f 07       	cpc	r24, r31
     2f4:	91 05       	cpc	r25, r1
     2f6:	78 f0       	brcs	.+30     	; 0x316 <parse_STypeInput+0xf4>
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
		while (preskalerData > 65535){
			preskalerData = preskalerData - 65335;
     2fc:	67 53       	subi	r22, 0x37	; 55
     2fe:	7f 4f       	sbci	r23, 0xFF	; 255
     300:	81 09       	sbc	r24, r1
     302:	91 09       	sbc	r25, r1
			overFlowCounter++;
     304:	2f 5f       	subi	r18, 0xFF	; 255
     306:	3f 4f       	sbci	r19, 0xFF	; 255
	data[2] = atoi(tmp[1]);
	overFlowCounter = 0;
	dtmsplit(messageSplited[1], ",", &tmp, &count);
	preskalerData = atol(tmp[0]);
	if (preskalerData > 65535){
		while (preskalerData > 65535){
     308:	61 15       	cp	r22, r1
     30a:	71 05       	cpc	r23, r1
     30c:	41 e0       	ldi	r20, 0x01	; 1
     30e:	84 07       	cpc	r24, r20
     310:	91 05       	cpc	r25, r1
     312:	a0 f7       	brcc	.-24     	; 0x2fc <parse_STypeInput+0xda>
     314:	02 c0       	rjmp	.+4      	; 0x31a <parse_STypeInput+0xf8>
		}
	}
	data[0] = (uint16_t)preskalerData;
	data[1] = overFlowCounter;
	data[2] = atoi(tmp[1]);
	overFlowCounter = 0;
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
		while (preskalerData > 65535){
			preskalerData = preskalerData - 65335;
			overFlowCounter++;
		}
	}
	data[3] = (uint16_t)preskalerData;
     31a:	f8 01       	movw	r30, r16
     31c:	77 83       	std	Z+7, r23	; 0x07
     31e:	66 83       	std	Z+6, r22	; 0x06
	data[4] = overFlowCounter;
     320:	31 87       	std	Z+9, r19	; 0x09
     322:	20 87       	std	Z+8, r18	; 0x08
	data[5] = atoi(tmp[1]);
     324:	f7 01       	movw	r30, r14
     326:	82 81       	ldd	r24, Z+2	; 0x02
     328:	93 81       	ldd	r25, Z+3	; 0x03
     32a:	40 d6       	rcall	.+3200   	; 0xfac <atoi>
     32c:	f8 01       	movw	r30, r16
     32e:	93 87       	std	Z+11, r25	; 0x0b
     330:	82 87       	std	Z+10, r24	; 0x0a
	data[6] = atoi(messageSplited[2]);
     332:	e9 81       	ldd	r30, Y+1	; 0x01
     334:	fa 81       	ldd	r31, Y+2	; 0x02
     336:	84 81       	ldd	r24, Z+4	; 0x04
     338:	95 81       	ldd	r25, Z+5	; 0x05
     33a:	38 d6       	rcall	.+3184   	; 0xfac <atoi>
     33c:	f8 01       	movw	r30, r16
     33e:	95 87       	std	Z+13, r25	; 0x0d
     340:	84 87       	std	Z+12, r24	; 0x0c


}
     342:	26 96       	adiw	r28, 0x06	; 6
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	ff 90       	pop	r15
     358:	ef 90       	pop	r14
     35a:	08 95       	ret

0000035c <led_init>:
#include <string.h>
#include "UART.h"
#include "BtParser.h"

void led_init(void){
	DDRC |= (1<<PORTC3);
     35c:	a3 9a       	sbi	0x14, 3	; 20
	PORTC &= ~(1<<PORTC3);
     35e:	ab 98       	cbi	0x15, 3	; 21
     360:	08 95       	ret

00000362 <led_on>:
}

void led_on(void){
	PORTC |= (1<<PORTC3);
     362:	ab 9a       	sbi	0x15, 3	; 21
     364:	08 95       	ret

00000366 <led_off>:
}
//--------------------------------------------------------------

void led_off(void){
	PORTC &= ~(1<<PORTC3);
     366:	ab 98       	cbi	0x15, 3	; 21
     368:	08 95       	ret

0000036a <main>:
}
//--------------------------------------------------------------

int main(void)
{
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	cd b7       	in	r28, 0x3d	; 61
     370:	de b7       	in	r29, 0x3e	; 62
     372:	2e 97       	sbiw	r28, 0x0e	; 14
     374:	0f b6       	in	r0, 0x3f	; 63
     376:	f8 94       	cli
     378:	de bf       	out	0x3e, r29	; 62
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	cd bf       	out	0x3d, r28	; 61
	led_init();
     37e:	ee df       	rcall	.-36     	; 0x35c <led_init>
	usart_init(); //initiate USART module (RS-232)
     380:	18 d0       	rcall	.+48     	; 0x3b2 <usart_init>
	sei();        //switch on global interruption
     382:	78 94       	sei
	uint16_t timerSettings[7];//0-counter settings for photo 1-timer overflow counter 2-prescaler settings__3,4,5-same but for delay__6- amount of photos.
	
	while(1){
		if (FRAME_is_RDY){
			led_on();
			if(buffer[0]==0x73)
     384:	0d e9       	ldi	r16, 0x9D	; 157
     386:	10 e0       	ldi	r17, 0x00	; 0
	sei();        //switch on global interruption
	
	uint16_t timerSettings[7];//0-counter settings for photo 1-timer overflow counter 2-prescaler settings__3,4,5-same but for delay__6- amount of photos.
	
	while(1){
		if (FRAME_is_RDY){
     388:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <FRAME_is_RDY>
     38c:	88 23       	and	r24, r24
     38e:	79 f0       	breq	.+30     	; 0x3ae <main+0x44>
			led_on();
     390:	e8 df       	rcall	.-48     	; 0x362 <led_on>
			if(buffer[0]==0x73)
     392:	f8 01       	movw	r30, r16
     394:	80 81       	ld	r24, Z
     396:	83 37       	cpi	r24, 0x73	; 115
     398:	29 f4       	brne	.+10     	; 0x3a4 <main+0x3a>
			parse_STypeInput(buffer,timerSettings);//buffer present?
     39a:	be 01       	movw	r22, r28
     39c:	6f 5f       	subi	r22, 0xFF	; 255
     39e:	7f 4f       	sbci	r23, 0xFF	; 255
     3a0:	c8 01       	movw	r24, r16
     3a2:	3f df       	rcall	.-386    	; 0x222 <parse_STypeInput>
			send_message(buffer);// buffer will be corrupted after parsing
     3a4:	c8 01       	movw	r24, r16
     3a6:	7a d0       	rcall	.+244    	; 0x49c <send_message>
			FRAME_is_RDY = false;
     3a8:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <FRAME_is_RDY>
     3ac:	ed cf       	rjmp	.-38     	; 0x388 <main+0x1e>
			}
			
			else{
			led_off();
     3ae:	db df       	rcall	.-74     	; 0x366 <led_off>
     3b0:	eb cf       	rjmp	.-42     	; 0x388 <main+0x1e>

000003b2 <usart_init>:
	*/
	#define BAUD 9600        //transmission speed
	#include <util/setbaud.h> //link to head file	
	
	//set values calculated in macro
	UBRRH = UBRRH_VALUE;
     3b2:	10 bc       	out	0x20, r1	; 32
	UBRRL = UBRRL_VALUE;
     3b4:	8c e0       	ldi	r24, 0x0C	; 12
     3b6:	89 b9       	out	0x09, r24	; 9
	#if USE_2X
	UCSRA |=  (1<<U2X);
     3b8:	59 9a       	sbi	0x0b, 1	; 11
	/* 
	Setting up other USART parameters
	 WARINING !!!
	http://mikrokontrolery.blogspot.com/2011/04/avr-czyhajace-pulapki.html
	*/
	UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);  
     3ba:	86 e8       	ldi	r24, 0x86	; 134
     3bc:	80 bd       	out	0x20, r24	; 32
	data bits	: 8
	stop bit:  1
	odd bits:  none
	switch on transmitter and receiver and receiver interruption 
	*/
	UCSRB = (1<<TXEN) | (1<<RXEN) | (1<<RXCIE);
     3be:	88 e9       	ldi	r24, 0x98	; 152
     3c0:	8a b9       	out	0x0a, r24	; 10
     3c2:	08 95       	ret

000003c4 <__vector_11>:

//--------------------------------------------------------------


ISR(USART_RXC_vect)
{
     3c4:	1f 92       	push	r1
     3c6:	0f 92       	push	r0
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	0f 92       	push	r0
     3cc:	11 24       	eor	r1, r1
     3ce:	8f 93       	push	r24
     3d0:	9f 93       	push	r25
     3d2:	ef 93       	push	r30
     3d4:	ff 93       	push	r31
	//interruption generate after bait receiving
	char received = UDR;
     3d6:	8c b1       	in	r24, 0x0c	; 12
	
	if(reciving){
     3d8:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <reciving>
     3dc:	99 23       	and	r25, r25
     3de:	a9 f0       	breq	.+42     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		new_message = false;
     3e0:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <new_message>
		if(received == stop_sign){
     3e4:	89 32       	cpi	r24, 0x29	; 41
     3e6:	21 f4       	brne	.+8      	; 0x3f0 <__vector_11+0x2c>
			FRAME_is_RDY = true;
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <FRAME_is_RDY>
     3ee:	1f c0       	rjmp	.+62     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		}
		else{
			buffer[recived_buffer_ind++]=received;
     3f0:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <recived_buffer_ind>
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	9e 0f       	add	r25, r30
     3f8:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <recived_buffer_ind>
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	e3 56       	subi	r30, 0x63	; 99
     400:	ff 4f       	sbci	r31, 0xFF	; 255
     402:	80 83       	st	Z, r24
			FRAME_is_RDY = false;
     404:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <FRAME_is_RDY>
     408:	12 c0       	rjmp	.+36     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		}
	}
	else{
		if(received == start_sign){
     40a:	88 32       	cpi	r24, 0x28	; 40
     40c:	81 f4       	brne	.+32     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
			buffer[recived_buffer_ind++] = received;
     40e:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <recived_buffer_ind>
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	8e 0f       	add	r24, r30
     416:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <recived_buffer_ind>
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	e3 56       	subi	r30, 0x63	; 99
     41e:	ff 4f       	sbci	r31, 0xFF	; 255
     420:	88 e2       	ldi	r24, 0x28	; 40
     422:	80 83       	st	Z, r24
			reciving = true;
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <reciving>
			new_message = true;
     42a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <new_message>
		}
			
	}
	
}
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	9f 91       	pop	r25
     434:	8f 91       	pop	r24
     436:	0f 90       	pop	r0
     438:	0f be       	out	0x3f, r0	; 63
     43a:	0f 90       	pop	r0
     43c:	1f 90       	pop	r1
     43e:	18 95       	reti

00000440 <__vector_12>:


//--------------------------------------------------------------

ISR(USART_UDRE_vect){
     440:	1f 92       	push	r1
     442:	0f 92       	push	r0
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	0f 92       	push	r0
     448:	11 24       	eor	r1, r1
     44a:	8f 93       	push	r24
     44c:	9f 93       	push	r25
     44e:	ef 93       	push	r30
     450:	ff 93       	push	r31
	
	/* 
	interruption generated after sending buffer became empty,
	send all sings from table 
	*/
	if(sended<frame_length){
     452:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sended>
     456:	8a 30       	cpi	r24, 0x0A	; 10
     458:	90 f4       	brcc	.+36     	; 0x47e <__stack+0x1f>
		sended++;
     45a:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sended>
     45e:	8f 5f       	subi	r24, 0xFF	; 255
     460:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <sended>
		UDR = *toSend++;
     464:	e0 91 6f 00 	lds	r30, 0x006F	; 0x80006f <toSend>
     468:	f0 91 70 00 	lds	r31, 0x0070	; 0x800070 <toSend+0x1>
     46c:	cf 01       	movw	r24, r30
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <toSend+0x1>
     474:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <toSend>
     478:	80 81       	ld	r24, Z
     47a:	8c b9       	out	0x0c, r24	; 12
     47c:	06 c0       	rjmp	.+12     	; 0x48a <__stack+0x2b>
		
		}else{
		is_sending_end= true;
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <is_sending_end>
		sended=0;
     484:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <sended>
		//achieved table end
		UCSRB &= ~(1<<UDRIE); //turn off empty buffer interruption
     488:	55 98       	cbi	0x0a, 5	; 10
	}
}
     48a:	ff 91       	pop	r31
     48c:	ef 91       	pop	r30
     48e:	9f 91       	pop	r25
     490:	8f 91       	pop	r24
     492:	0f 90       	pop	r0
     494:	0f be       	out	0x3f, r0	; 63
     496:	0f 90       	pop	r0
     498:	1f 90       	pop	r1
     49a:	18 95       	reti

0000049c <send_message>:
//--------------------------------------------------

void send_message(char *buf_to_send){
     49c:	9c 01       	movw	r18, r24
	/*
	function starts sending first sing, rest is sended in interruption, 
	automatically called after sending each sign 
	*/
	
	while (!is_sending_end);
     49e:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <is_sending_end>
     4a2:	99 23       	and	r25, r25
     4a4:	e1 f3       	breq	.-8      	; 0x49e <send_message+0x2>
	toSend = buf_to_send;
     4a6:	30 93 70 00 	sts	0x0070, r19	; 0x800070 <toSend+0x1>
     4aa:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <toSend>
	if (toSend != NULL)
     4ae:	23 2b       	or	r18, r19
     4b0:	39 f0       	breq	.+14     	; 0x4c0 <send_message+0x24>
	{
		//wait until buffer is empty
		while (!(UCSRA & (1<<UDRE)));
     4b2:	5d 9b       	sbis	0x0b, 5	; 11
     4b4:	fe cf       	rjmp	.-4      	; 0x4b2 <send_message+0x16>
		is_sending_end = false;
     4b6:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <is_sending_end>
		
		recived_buffer_ind = 0;
     4ba:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <recived_buffer_ind>
		/*
		if buffer is empty, sending is allowed, switch on empty buffer interruption
		what cause starting a transmission actual buffer content 
		*/
		UCSRB |= (1<<UDRIE);
     4be:	55 9a       	sbi	0x0a, 5	; 10
     4c0:	08 95       	ret

000004c2 <vfprintf>:
     4c2:	a0 e1       	ldi	r26, 0x10	; 16
     4c4:	b0 e0       	ldi	r27, 0x00	; 0
     4c6:	e6 e6       	ldi	r30, 0x66	; 102
     4c8:	f2 e0       	ldi	r31, 0x02	; 2
     4ca:	59 c3       	rjmp	.+1714   	; 0xb7e <__prologue_saves__>
     4cc:	7c 01       	movw	r14, r24
     4ce:	1b 01       	movw	r2, r22
     4d0:	6a 01       	movw	r12, r20
     4d2:	fc 01       	movw	r30, r24
     4d4:	17 82       	std	Z+7, r1	; 0x07
     4d6:	16 82       	std	Z+6, r1	; 0x06
     4d8:	83 81       	ldd	r24, Z+3	; 0x03
     4da:	81 ff       	sbrs	r24, 1
     4dc:	2a c3       	rjmp	.+1620   	; 0xb32 <vfprintf+0x670>
     4de:	9e 01       	movw	r18, r28
     4e0:	2f 5f       	subi	r18, 0xFF	; 255
     4e2:	3f 4f       	sbci	r19, 0xFF	; 255
     4e4:	39 01       	movw	r6, r18
     4e6:	f7 01       	movw	r30, r14
     4e8:	93 81       	ldd	r25, Z+3	; 0x03
     4ea:	f1 01       	movw	r30, r2
     4ec:	93 fd       	sbrc	r25, 3
     4ee:	85 91       	lpm	r24, Z+
     4f0:	93 ff       	sbrs	r25, 3
     4f2:	81 91       	ld	r24, Z+
     4f4:	1f 01       	movw	r2, r30
     4f6:	88 23       	and	r24, r24
     4f8:	09 f4       	brne	.+2      	; 0x4fc <vfprintf+0x3a>
     4fa:	17 c3       	rjmp	.+1582   	; 0xb2a <vfprintf+0x668>
     4fc:	85 32       	cpi	r24, 0x25	; 37
     4fe:	39 f4       	brne	.+14     	; 0x50e <vfprintf+0x4c>
     500:	93 fd       	sbrc	r25, 3
     502:	85 91       	lpm	r24, Z+
     504:	93 ff       	sbrs	r25, 3
     506:	81 91       	ld	r24, Z+
     508:	1f 01       	movw	r2, r30
     50a:	85 32       	cpi	r24, 0x25	; 37
     50c:	31 f4       	brne	.+12     	; 0x51a <vfprintf+0x58>
     50e:	b7 01       	movw	r22, r14
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	ce d6       	rcall	.+3484   	; 0x12b0 <fputc>
     514:	56 01       	movw	r10, r12
     516:	65 01       	movw	r12, r10
     518:	e6 cf       	rjmp	.-52     	; 0x4e6 <vfprintf+0x24>
     51a:	10 e0       	ldi	r17, 0x00	; 0
     51c:	51 2c       	mov	r5, r1
     51e:	91 2c       	mov	r9, r1
     520:	ff e1       	ldi	r31, 0x1F	; 31
     522:	f9 15       	cp	r31, r9
     524:	d8 f0       	brcs	.+54     	; 0x55c <vfprintf+0x9a>
     526:	8b 32       	cpi	r24, 0x2B	; 43
     528:	79 f0       	breq	.+30     	; 0x548 <vfprintf+0x86>
     52a:	38 f4       	brcc	.+14     	; 0x53a <vfprintf+0x78>
     52c:	80 32       	cpi	r24, 0x20	; 32
     52e:	79 f0       	breq	.+30     	; 0x54e <vfprintf+0x8c>
     530:	83 32       	cpi	r24, 0x23	; 35
     532:	a1 f4       	brne	.+40     	; 0x55c <vfprintf+0x9a>
     534:	f9 2d       	mov	r31, r9
     536:	f0 61       	ori	r31, 0x10	; 16
     538:	2e c0       	rjmp	.+92     	; 0x596 <vfprintf+0xd4>
     53a:	8d 32       	cpi	r24, 0x2D	; 45
     53c:	61 f0       	breq	.+24     	; 0x556 <vfprintf+0x94>
     53e:	80 33       	cpi	r24, 0x30	; 48
     540:	69 f4       	brne	.+26     	; 0x55c <vfprintf+0x9a>
     542:	29 2d       	mov	r18, r9
     544:	21 60       	ori	r18, 0x01	; 1
     546:	2d c0       	rjmp	.+90     	; 0x5a2 <vfprintf+0xe0>
     548:	39 2d       	mov	r19, r9
     54a:	32 60       	ori	r19, 0x02	; 2
     54c:	93 2e       	mov	r9, r19
     54e:	89 2d       	mov	r24, r9
     550:	84 60       	ori	r24, 0x04	; 4
     552:	98 2e       	mov	r9, r24
     554:	2a c0       	rjmp	.+84     	; 0x5aa <vfprintf+0xe8>
     556:	e9 2d       	mov	r30, r9
     558:	e8 60       	ori	r30, 0x08	; 8
     55a:	15 c0       	rjmp	.+42     	; 0x586 <vfprintf+0xc4>
     55c:	97 fc       	sbrc	r9, 7
     55e:	2d c0       	rjmp	.+90     	; 0x5ba <vfprintf+0xf8>
     560:	20 ed       	ldi	r18, 0xD0	; 208
     562:	28 0f       	add	r18, r24
     564:	2a 30       	cpi	r18, 0x0A	; 10
     566:	88 f4       	brcc	.+34     	; 0x58a <vfprintf+0xc8>
     568:	96 fe       	sbrs	r9, 6
     56a:	06 c0       	rjmp	.+12     	; 0x578 <vfprintf+0xb6>
     56c:	3a e0       	ldi	r19, 0x0A	; 10
     56e:	13 9f       	mul	r17, r19
     570:	20 0d       	add	r18, r0
     572:	11 24       	eor	r1, r1
     574:	12 2f       	mov	r17, r18
     576:	19 c0       	rjmp	.+50     	; 0x5aa <vfprintf+0xe8>
     578:	8a e0       	ldi	r24, 0x0A	; 10
     57a:	58 9e       	mul	r5, r24
     57c:	20 0d       	add	r18, r0
     57e:	11 24       	eor	r1, r1
     580:	52 2e       	mov	r5, r18
     582:	e9 2d       	mov	r30, r9
     584:	e0 62       	ori	r30, 0x20	; 32
     586:	9e 2e       	mov	r9, r30
     588:	10 c0       	rjmp	.+32     	; 0x5aa <vfprintf+0xe8>
     58a:	8e 32       	cpi	r24, 0x2E	; 46
     58c:	31 f4       	brne	.+12     	; 0x59a <vfprintf+0xd8>
     58e:	96 fc       	sbrc	r9, 6
     590:	cc c2       	rjmp	.+1432   	; 0xb2a <vfprintf+0x668>
     592:	f9 2d       	mov	r31, r9
     594:	f0 64       	ori	r31, 0x40	; 64
     596:	9f 2e       	mov	r9, r31
     598:	08 c0       	rjmp	.+16     	; 0x5aa <vfprintf+0xe8>
     59a:	8c 36       	cpi	r24, 0x6C	; 108
     59c:	21 f4       	brne	.+8      	; 0x5a6 <vfprintf+0xe4>
     59e:	29 2d       	mov	r18, r9
     5a0:	20 68       	ori	r18, 0x80	; 128
     5a2:	92 2e       	mov	r9, r18
     5a4:	02 c0       	rjmp	.+4      	; 0x5aa <vfprintf+0xe8>
     5a6:	88 36       	cpi	r24, 0x68	; 104
     5a8:	41 f4       	brne	.+16     	; 0x5ba <vfprintf+0xf8>
     5aa:	f1 01       	movw	r30, r2
     5ac:	93 fd       	sbrc	r25, 3
     5ae:	85 91       	lpm	r24, Z+
     5b0:	93 ff       	sbrs	r25, 3
     5b2:	81 91       	ld	r24, Z+
     5b4:	1f 01       	movw	r2, r30
     5b6:	81 11       	cpse	r24, r1
     5b8:	b3 cf       	rjmp	.-154    	; 0x520 <vfprintf+0x5e>
     5ba:	9b eb       	ldi	r25, 0xBB	; 187
     5bc:	98 0f       	add	r25, r24
     5be:	93 30       	cpi	r25, 0x03	; 3
     5c0:	20 f4       	brcc	.+8      	; 0x5ca <vfprintf+0x108>
     5c2:	99 2d       	mov	r25, r9
     5c4:	90 61       	ori	r25, 0x10	; 16
     5c6:	80 5e       	subi	r24, 0xE0	; 224
     5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <vfprintf+0x116>
     5ca:	9b e9       	ldi	r25, 0x9B	; 155
     5cc:	98 0f       	add	r25, r24
     5ce:	93 30       	cpi	r25, 0x03	; 3
     5d0:	08 f0       	brcs	.+2      	; 0x5d4 <vfprintf+0x112>
     5d2:	59 c1       	rjmp	.+690    	; 0x886 <vfprintf+0x3c4>
     5d4:	99 2d       	mov	r25, r9
     5d6:	9f 7e       	andi	r25, 0xEF	; 239
     5d8:	96 ff       	sbrs	r25, 6
     5da:	16 e0       	ldi	r17, 0x06	; 6
     5dc:	9f 73       	andi	r25, 0x3F	; 63
     5de:	99 2e       	mov	r9, r25
     5e0:	85 36       	cpi	r24, 0x65	; 101
     5e2:	19 f4       	brne	.+6      	; 0x5ea <vfprintf+0x128>
     5e4:	90 64       	ori	r25, 0x40	; 64
     5e6:	99 2e       	mov	r9, r25
     5e8:	08 c0       	rjmp	.+16     	; 0x5fa <vfprintf+0x138>
     5ea:	86 36       	cpi	r24, 0x66	; 102
     5ec:	21 f4       	brne	.+8      	; 0x5f6 <vfprintf+0x134>
     5ee:	39 2f       	mov	r19, r25
     5f0:	30 68       	ori	r19, 0x80	; 128
     5f2:	93 2e       	mov	r9, r19
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <vfprintf+0x138>
     5f6:	11 11       	cpse	r17, r1
     5f8:	11 50       	subi	r17, 0x01	; 1
     5fa:	97 fe       	sbrs	r9, 7
     5fc:	07 c0       	rjmp	.+14     	; 0x60c <vfprintf+0x14a>
     5fe:	1c 33       	cpi	r17, 0x3C	; 60
     600:	50 f4       	brcc	.+20     	; 0x616 <vfprintf+0x154>
     602:	44 24       	eor	r4, r4
     604:	43 94       	inc	r4
     606:	41 0e       	add	r4, r17
     608:	27 e0       	ldi	r18, 0x07	; 7
     60a:	0b c0       	rjmp	.+22     	; 0x622 <vfprintf+0x160>
     60c:	18 30       	cpi	r17, 0x08	; 8
     60e:	38 f0       	brcs	.+14     	; 0x61e <vfprintf+0x15c>
     610:	27 e0       	ldi	r18, 0x07	; 7
     612:	17 e0       	ldi	r17, 0x07	; 7
     614:	05 c0       	rjmp	.+10     	; 0x620 <vfprintf+0x15e>
     616:	27 e0       	ldi	r18, 0x07	; 7
     618:	9c e3       	ldi	r25, 0x3C	; 60
     61a:	49 2e       	mov	r4, r25
     61c:	02 c0       	rjmp	.+4      	; 0x622 <vfprintf+0x160>
     61e:	21 2f       	mov	r18, r17
     620:	41 2c       	mov	r4, r1
     622:	56 01       	movw	r10, r12
     624:	84 e0       	ldi	r24, 0x04	; 4
     626:	a8 0e       	add	r10, r24
     628:	b1 1c       	adc	r11, r1
     62a:	f6 01       	movw	r30, r12
     62c:	60 81       	ld	r22, Z
     62e:	71 81       	ldd	r23, Z+1	; 0x01
     630:	82 81       	ldd	r24, Z+2	; 0x02
     632:	93 81       	ldd	r25, Z+3	; 0x03
     634:	04 2d       	mov	r16, r4
     636:	a3 01       	movw	r20, r6
     638:	fc d4       	rcall	.+2552   	; 0x1032 <__ftoa_engine>
     63a:	6c 01       	movw	r12, r24
     63c:	f9 81       	ldd	r31, Y+1	; 0x01
     63e:	fc 87       	std	Y+12, r31	; 0x0c
     640:	f0 ff       	sbrs	r31, 0
     642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0x186>
     644:	f3 ff       	sbrs	r31, 3
     646:	06 c0       	rjmp	.+12     	; 0x654 <vfprintf+0x192>
     648:	91 fc       	sbrc	r9, 1
     64a:	06 c0       	rjmp	.+12     	; 0x658 <vfprintf+0x196>
     64c:	92 fe       	sbrs	r9, 2
     64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0x19a>
     650:	00 e2       	ldi	r16, 0x20	; 32
     652:	05 c0       	rjmp	.+10     	; 0x65e <vfprintf+0x19c>
     654:	0d e2       	ldi	r16, 0x2D	; 45
     656:	03 c0       	rjmp	.+6      	; 0x65e <vfprintf+0x19c>
     658:	0b e2       	ldi	r16, 0x2B	; 43
     65a:	01 c0       	rjmp	.+2      	; 0x65e <vfprintf+0x19c>
     65c:	00 e0       	ldi	r16, 0x00	; 0
     65e:	8c 85       	ldd	r24, Y+12	; 0x0c
     660:	8c 70       	andi	r24, 0x0C	; 12
     662:	19 f0       	breq	.+6      	; 0x66a <vfprintf+0x1a8>
     664:	01 11       	cpse	r16, r1
     666:	43 c2       	rjmp	.+1158   	; 0xaee <vfprintf+0x62c>
     668:	80 c2       	rjmp	.+1280   	; 0xb6a <vfprintf+0x6a8>
     66a:	97 fe       	sbrs	r9, 7
     66c:	10 c0       	rjmp	.+32     	; 0x68e <vfprintf+0x1cc>
     66e:	4c 0c       	add	r4, r12
     670:	fc 85       	ldd	r31, Y+12	; 0x0c
     672:	f4 ff       	sbrs	r31, 4
     674:	04 c0       	rjmp	.+8      	; 0x67e <vfprintf+0x1bc>
     676:	8a 81       	ldd	r24, Y+2	; 0x02
     678:	81 33       	cpi	r24, 0x31	; 49
     67a:	09 f4       	brne	.+2      	; 0x67e <vfprintf+0x1bc>
     67c:	4a 94       	dec	r4
     67e:	14 14       	cp	r1, r4
     680:	74 f5       	brge	.+92     	; 0x6de <vfprintf+0x21c>
     682:	28 e0       	ldi	r18, 0x08	; 8
     684:	24 15       	cp	r18, r4
     686:	78 f5       	brcc	.+94     	; 0x6e6 <vfprintf+0x224>
     688:	88 e0       	ldi	r24, 0x08	; 8
     68a:	48 2e       	mov	r4, r24
     68c:	2c c0       	rjmp	.+88     	; 0x6e6 <vfprintf+0x224>
     68e:	96 fc       	sbrc	r9, 6
     690:	2a c0       	rjmp	.+84     	; 0x6e6 <vfprintf+0x224>
     692:	81 2f       	mov	r24, r17
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	8c 15       	cp	r24, r12
     698:	9d 05       	cpc	r25, r13
     69a:	9c f0       	brlt	.+38     	; 0x6c2 <vfprintf+0x200>
     69c:	3c ef       	ldi	r19, 0xFC	; 252
     69e:	c3 16       	cp	r12, r19
     6a0:	3f ef       	ldi	r19, 0xFF	; 255
     6a2:	d3 06       	cpc	r13, r19
     6a4:	74 f0       	brlt	.+28     	; 0x6c2 <vfprintf+0x200>
     6a6:	89 2d       	mov	r24, r9
     6a8:	80 68       	ori	r24, 0x80	; 128
     6aa:	98 2e       	mov	r9, r24
     6ac:	0a c0       	rjmp	.+20     	; 0x6c2 <vfprintf+0x200>
     6ae:	e2 e0       	ldi	r30, 0x02	; 2
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	ec 0f       	add	r30, r28
     6b4:	fd 1f       	adc	r31, r29
     6b6:	e1 0f       	add	r30, r17
     6b8:	f1 1d       	adc	r31, r1
     6ba:	80 81       	ld	r24, Z
     6bc:	80 33       	cpi	r24, 0x30	; 48
     6be:	19 f4       	brne	.+6      	; 0x6c6 <vfprintf+0x204>
     6c0:	11 50       	subi	r17, 0x01	; 1
     6c2:	11 11       	cpse	r17, r1
     6c4:	f4 cf       	rjmp	.-24     	; 0x6ae <vfprintf+0x1ec>
     6c6:	97 fe       	sbrs	r9, 7
     6c8:	0e c0       	rjmp	.+28     	; 0x6e6 <vfprintf+0x224>
     6ca:	44 24       	eor	r4, r4
     6cc:	43 94       	inc	r4
     6ce:	41 0e       	add	r4, r17
     6d0:	81 2f       	mov	r24, r17
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	c8 16       	cp	r12, r24
     6d6:	d9 06       	cpc	r13, r25
     6d8:	2c f4       	brge	.+10     	; 0x6e4 <vfprintf+0x222>
     6da:	1c 19       	sub	r17, r12
     6dc:	04 c0       	rjmp	.+8      	; 0x6e6 <vfprintf+0x224>
     6de:	44 24       	eor	r4, r4
     6e0:	43 94       	inc	r4
     6e2:	01 c0       	rjmp	.+2      	; 0x6e6 <vfprintf+0x224>
     6e4:	10 e0       	ldi	r17, 0x00	; 0
     6e6:	97 fe       	sbrs	r9, 7
     6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <vfprintf+0x234>
     6ea:	1c 14       	cp	r1, r12
     6ec:	1d 04       	cpc	r1, r13
     6ee:	34 f4       	brge	.+12     	; 0x6fc <vfprintf+0x23a>
     6f0:	c6 01       	movw	r24, r12
     6f2:	01 96       	adiw	r24, 0x01	; 1
     6f4:	05 c0       	rjmp	.+10     	; 0x700 <vfprintf+0x23e>
     6f6:	85 e0       	ldi	r24, 0x05	; 5
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	02 c0       	rjmp	.+4      	; 0x700 <vfprintf+0x23e>
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	01 11       	cpse	r16, r1
     702:	01 96       	adiw	r24, 0x01	; 1
     704:	11 23       	and	r17, r17
     706:	31 f0       	breq	.+12     	; 0x714 <vfprintf+0x252>
     708:	21 2f       	mov	r18, r17
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	2f 5f       	subi	r18, 0xFF	; 255
     70e:	3f 4f       	sbci	r19, 0xFF	; 255
     710:	82 0f       	add	r24, r18
     712:	93 1f       	adc	r25, r19
     714:	25 2d       	mov	r18, r5
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	82 17       	cp	r24, r18
     71a:	93 07       	cpc	r25, r19
     71c:	14 f4       	brge	.+4      	; 0x722 <vfprintf+0x260>
     71e:	58 1a       	sub	r5, r24
     720:	01 c0       	rjmp	.+2      	; 0x724 <vfprintf+0x262>
     722:	51 2c       	mov	r5, r1
     724:	89 2d       	mov	r24, r9
     726:	89 70       	andi	r24, 0x09	; 9
     728:	41 f4       	brne	.+16     	; 0x73a <vfprintf+0x278>
     72a:	55 20       	and	r5, r5
     72c:	31 f0       	breq	.+12     	; 0x73a <vfprintf+0x278>
     72e:	b7 01       	movw	r22, r14
     730:	80 e2       	ldi	r24, 0x20	; 32
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	bd d5       	rcall	.+2938   	; 0x12b0 <fputc>
     736:	5a 94       	dec	r5
     738:	f8 cf       	rjmp	.-16     	; 0x72a <vfprintf+0x268>
     73a:	00 23       	and	r16, r16
     73c:	21 f0       	breq	.+8      	; 0x746 <vfprintf+0x284>
     73e:	b7 01       	movw	r22, r14
     740:	80 2f       	mov	r24, r16
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	b5 d5       	rcall	.+2922   	; 0x12b0 <fputc>
     746:	93 fc       	sbrc	r9, 3
     748:	08 c0       	rjmp	.+16     	; 0x75a <vfprintf+0x298>
     74a:	55 20       	and	r5, r5
     74c:	31 f0       	breq	.+12     	; 0x75a <vfprintf+0x298>
     74e:	b7 01       	movw	r22, r14
     750:	80 e3       	ldi	r24, 0x30	; 48
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	ad d5       	rcall	.+2906   	; 0x12b0 <fputc>
     756:	5a 94       	dec	r5
     758:	f8 cf       	rjmp	.-16     	; 0x74a <vfprintf+0x288>
     75a:	97 fe       	sbrs	r9, 7
     75c:	4a c0       	rjmp	.+148    	; 0x7f2 <vfprintf+0x330>
     75e:	46 01       	movw	r8, r12
     760:	d7 fe       	sbrs	r13, 7
     762:	02 c0       	rjmp	.+4      	; 0x768 <vfprintf+0x2a6>
     764:	81 2c       	mov	r8, r1
     766:	91 2c       	mov	r9, r1
     768:	c6 01       	movw	r24, r12
     76a:	88 19       	sub	r24, r8
     76c:	99 09       	sbc	r25, r9
     76e:	f3 01       	movw	r30, r6
     770:	e8 0f       	add	r30, r24
     772:	f9 1f       	adc	r31, r25
     774:	fe 87       	std	Y+14, r31	; 0x0e
     776:	ed 87       	std	Y+13, r30	; 0x0d
     778:	96 01       	movw	r18, r12
     77a:	24 19       	sub	r18, r4
     77c:	31 09       	sbc	r19, r1
     77e:	38 8b       	std	Y+16, r19	; 0x10
     780:	2f 87       	std	Y+15, r18	; 0x0f
     782:	01 2f       	mov	r16, r17
     784:	10 e0       	ldi	r17, 0x00	; 0
     786:	11 95       	neg	r17
     788:	01 95       	neg	r16
     78a:	11 09       	sbc	r17, r1
     78c:	3f ef       	ldi	r19, 0xFF	; 255
     78e:	83 16       	cp	r8, r19
     790:	93 06       	cpc	r9, r19
     792:	21 f4       	brne	.+8      	; 0x79c <vfprintf+0x2da>
     794:	b7 01       	movw	r22, r14
     796:	8e e2       	ldi	r24, 0x2E	; 46
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	8a d5       	rcall	.+2836   	; 0x12b0 <fputc>
     79c:	c8 14       	cp	r12, r8
     79e:	d9 04       	cpc	r13, r9
     7a0:	4c f0       	brlt	.+18     	; 0x7b4 <vfprintf+0x2f2>
     7a2:	8f 85       	ldd	r24, Y+15	; 0x0f
     7a4:	98 89       	ldd	r25, Y+16	; 0x10
     7a6:	88 15       	cp	r24, r8
     7a8:	99 05       	cpc	r25, r9
     7aa:	24 f4       	brge	.+8      	; 0x7b4 <vfprintf+0x2f2>
     7ac:	ed 85       	ldd	r30, Y+13	; 0x0d
     7ae:	fe 85       	ldd	r31, Y+14	; 0x0e
     7b0:	81 81       	ldd	r24, Z+1	; 0x01
     7b2:	01 c0       	rjmp	.+2      	; 0x7b6 <vfprintf+0x2f4>
     7b4:	80 e3       	ldi	r24, 0x30	; 48
     7b6:	f1 e0       	ldi	r31, 0x01	; 1
     7b8:	8f 1a       	sub	r8, r31
     7ba:	91 08       	sbc	r9, r1
     7bc:	2d 85       	ldd	r18, Y+13	; 0x0d
     7be:	3e 85       	ldd	r19, Y+14	; 0x0e
     7c0:	2f 5f       	subi	r18, 0xFF	; 255
     7c2:	3f 4f       	sbci	r19, 0xFF	; 255
     7c4:	3e 87       	std	Y+14, r19	; 0x0e
     7c6:	2d 87       	std	Y+13, r18	; 0x0d
     7c8:	80 16       	cp	r8, r16
     7ca:	91 06       	cpc	r9, r17
     7cc:	24 f0       	brlt	.+8      	; 0x7d6 <vfprintf+0x314>
     7ce:	b7 01       	movw	r22, r14
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	6e d5       	rcall	.+2780   	; 0x12b0 <fputc>
     7d4:	db cf       	rjmp	.-74     	; 0x78c <vfprintf+0x2ca>
     7d6:	c8 14       	cp	r12, r8
     7d8:	d9 04       	cpc	r13, r9
     7da:	41 f4       	brne	.+16     	; 0x7ec <vfprintf+0x32a>
     7dc:	9a 81       	ldd	r25, Y+2	; 0x02
     7de:	96 33       	cpi	r25, 0x36	; 54
     7e0:	20 f4       	brcc	.+8      	; 0x7ea <vfprintf+0x328>
     7e2:	95 33       	cpi	r25, 0x35	; 53
     7e4:	19 f4       	brne	.+6      	; 0x7ec <vfprintf+0x32a>
     7e6:	3c 85       	ldd	r19, Y+12	; 0x0c
     7e8:	34 ff       	sbrs	r19, 4
     7ea:	81 e3       	ldi	r24, 0x31	; 49
     7ec:	b7 01       	movw	r22, r14
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	48 c0       	rjmp	.+144    	; 0x882 <vfprintf+0x3c0>
     7f2:	8a 81       	ldd	r24, Y+2	; 0x02
     7f4:	81 33       	cpi	r24, 0x31	; 49
     7f6:	19 f0       	breq	.+6      	; 0x7fe <vfprintf+0x33c>
     7f8:	9c 85       	ldd	r25, Y+12	; 0x0c
     7fa:	9f 7e       	andi	r25, 0xEF	; 239
     7fc:	9c 87       	std	Y+12, r25	; 0x0c
     7fe:	b7 01       	movw	r22, r14
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	56 d5       	rcall	.+2732   	; 0x12b0 <fputc>
     804:	11 11       	cpse	r17, r1
     806:	05 c0       	rjmp	.+10     	; 0x812 <vfprintf+0x350>
     808:	94 fc       	sbrc	r9, 4
     80a:	16 c0       	rjmp	.+44     	; 0x838 <vfprintf+0x376>
     80c:	85 e6       	ldi	r24, 0x65	; 101
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	15 c0       	rjmp	.+42     	; 0x83c <vfprintf+0x37a>
     812:	b7 01       	movw	r22, r14
     814:	8e e2       	ldi	r24, 0x2E	; 46
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	4b d5       	rcall	.+2710   	; 0x12b0 <fputc>
     81a:	1e 5f       	subi	r17, 0xFE	; 254
     81c:	82 e0       	ldi	r24, 0x02	; 2
     81e:	01 e0       	ldi	r16, 0x01	; 1
     820:	08 0f       	add	r16, r24
     822:	f3 01       	movw	r30, r6
     824:	e8 0f       	add	r30, r24
     826:	f1 1d       	adc	r31, r1
     828:	80 81       	ld	r24, Z
     82a:	b7 01       	movw	r22, r14
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	40 d5       	rcall	.+2688   	; 0x12b0 <fputc>
     830:	80 2f       	mov	r24, r16
     832:	01 13       	cpse	r16, r17
     834:	f4 cf       	rjmp	.-24     	; 0x81e <vfprintf+0x35c>
     836:	e8 cf       	rjmp	.-48     	; 0x808 <vfprintf+0x346>
     838:	85 e4       	ldi	r24, 0x45	; 69
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	b7 01       	movw	r22, r14
     83e:	38 d5       	rcall	.+2672   	; 0x12b0 <fputc>
     840:	d7 fc       	sbrc	r13, 7
     842:	06 c0       	rjmp	.+12     	; 0x850 <vfprintf+0x38e>
     844:	c1 14       	cp	r12, r1
     846:	d1 04       	cpc	r13, r1
     848:	41 f4       	brne	.+16     	; 0x85a <vfprintf+0x398>
     84a:	ec 85       	ldd	r30, Y+12	; 0x0c
     84c:	e4 ff       	sbrs	r30, 4
     84e:	05 c0       	rjmp	.+10     	; 0x85a <vfprintf+0x398>
     850:	d1 94       	neg	r13
     852:	c1 94       	neg	r12
     854:	d1 08       	sbc	r13, r1
     856:	8d e2       	ldi	r24, 0x2D	; 45
     858:	01 c0       	rjmp	.+2      	; 0x85c <vfprintf+0x39a>
     85a:	8b e2       	ldi	r24, 0x2B	; 43
     85c:	b7 01       	movw	r22, r14
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	27 d5       	rcall	.+2638   	; 0x12b0 <fputc>
     862:	80 e3       	ldi	r24, 0x30	; 48
     864:	2a e0       	ldi	r18, 0x0A	; 10
     866:	c2 16       	cp	r12, r18
     868:	d1 04       	cpc	r13, r1
     86a:	2c f0       	brlt	.+10     	; 0x876 <vfprintf+0x3b4>
     86c:	8f 5f       	subi	r24, 0xFF	; 255
     86e:	fa e0       	ldi	r31, 0x0A	; 10
     870:	cf 1a       	sub	r12, r31
     872:	d1 08       	sbc	r13, r1
     874:	f7 cf       	rjmp	.-18     	; 0x864 <vfprintf+0x3a2>
     876:	b7 01       	movw	r22, r14
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	1a d5       	rcall	.+2612   	; 0x12b0 <fputc>
     87c:	b7 01       	movw	r22, r14
     87e:	c6 01       	movw	r24, r12
     880:	c0 96       	adiw	r24, 0x30	; 48
     882:	16 d5       	rcall	.+2604   	; 0x12b0 <fputc>
     884:	49 c1       	rjmp	.+658    	; 0xb18 <vfprintf+0x656>
     886:	83 36       	cpi	r24, 0x63	; 99
     888:	31 f0       	breq	.+12     	; 0x896 <vfprintf+0x3d4>
     88a:	83 37       	cpi	r24, 0x73	; 115
     88c:	79 f0       	breq	.+30     	; 0x8ac <vfprintf+0x3ea>
     88e:	83 35       	cpi	r24, 0x53	; 83
     890:	09 f0       	breq	.+2      	; 0x894 <vfprintf+0x3d2>
     892:	52 c0       	rjmp	.+164    	; 0x938 <vfprintf+0x476>
     894:	1f c0       	rjmp	.+62     	; 0x8d4 <vfprintf+0x412>
     896:	56 01       	movw	r10, r12
     898:	32 e0       	ldi	r19, 0x02	; 2
     89a:	a3 0e       	add	r10, r19
     89c:	b1 1c       	adc	r11, r1
     89e:	f6 01       	movw	r30, r12
     8a0:	80 81       	ld	r24, Z
     8a2:	89 83       	std	Y+1, r24	; 0x01
     8a4:	01 e0       	ldi	r16, 0x01	; 1
     8a6:	10 e0       	ldi	r17, 0x00	; 0
     8a8:	63 01       	movw	r12, r6
     8aa:	11 c0       	rjmp	.+34     	; 0x8ce <vfprintf+0x40c>
     8ac:	56 01       	movw	r10, r12
     8ae:	f2 e0       	ldi	r31, 0x02	; 2
     8b0:	af 0e       	add	r10, r31
     8b2:	b1 1c       	adc	r11, r1
     8b4:	f6 01       	movw	r30, r12
     8b6:	c0 80       	ld	r12, Z
     8b8:	d1 80       	ldd	r13, Z+1	; 0x01
     8ba:	96 fe       	sbrs	r9, 6
     8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <vfprintf+0x402>
     8be:	61 2f       	mov	r22, r17
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0x406>
     8c4:	6f ef       	ldi	r22, 0xFF	; 255
     8c6:	7f ef       	ldi	r23, 0xFF	; 255
     8c8:	c6 01       	movw	r24, r12
     8ca:	a3 d4       	rcall	.+2374   	; 0x1212 <strnlen>
     8cc:	8c 01       	movw	r16, r24
     8ce:	f9 2d       	mov	r31, r9
     8d0:	ff 77       	andi	r31, 0x7F	; 127
     8d2:	13 c0       	rjmp	.+38     	; 0x8fa <vfprintf+0x438>
     8d4:	56 01       	movw	r10, r12
     8d6:	22 e0       	ldi	r18, 0x02	; 2
     8d8:	a2 0e       	add	r10, r18
     8da:	b1 1c       	adc	r11, r1
     8dc:	f6 01       	movw	r30, r12
     8de:	c0 80       	ld	r12, Z
     8e0:	d1 80       	ldd	r13, Z+1	; 0x01
     8e2:	96 fe       	sbrs	r9, 6
     8e4:	03 c0       	rjmp	.+6      	; 0x8ec <vfprintf+0x42a>
     8e6:	61 2f       	mov	r22, r17
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <vfprintf+0x42e>
     8ec:	6f ef       	ldi	r22, 0xFF	; 255
     8ee:	7f ef       	ldi	r23, 0xFF	; 255
     8f0:	c6 01       	movw	r24, r12
     8f2:	77 d4       	rcall	.+2286   	; 0x11e2 <strnlen_P>
     8f4:	8c 01       	movw	r16, r24
     8f6:	f9 2d       	mov	r31, r9
     8f8:	f0 68       	ori	r31, 0x80	; 128
     8fa:	9f 2e       	mov	r9, r31
     8fc:	f3 fd       	sbrc	r31, 3
     8fe:	18 c0       	rjmp	.+48     	; 0x930 <vfprintf+0x46e>
     900:	85 2d       	mov	r24, r5
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	08 17       	cp	r16, r24
     906:	19 07       	cpc	r17, r25
     908:	98 f4       	brcc	.+38     	; 0x930 <vfprintf+0x46e>
     90a:	b7 01       	movw	r22, r14
     90c:	80 e2       	ldi	r24, 0x20	; 32
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	cf d4       	rcall	.+2462   	; 0x12b0 <fputc>
     912:	5a 94       	dec	r5
     914:	f5 cf       	rjmp	.-22     	; 0x900 <vfprintf+0x43e>
     916:	f6 01       	movw	r30, r12
     918:	97 fc       	sbrc	r9, 7
     91a:	85 91       	lpm	r24, Z+
     91c:	97 fe       	sbrs	r9, 7
     91e:	81 91       	ld	r24, Z+
     920:	6f 01       	movw	r12, r30
     922:	b7 01       	movw	r22, r14
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	c4 d4       	rcall	.+2440   	; 0x12b0 <fputc>
     928:	51 10       	cpse	r5, r1
     92a:	5a 94       	dec	r5
     92c:	01 50       	subi	r16, 0x01	; 1
     92e:	11 09       	sbc	r17, r1
     930:	01 15       	cp	r16, r1
     932:	11 05       	cpc	r17, r1
     934:	81 f7       	brne	.-32     	; 0x916 <vfprintf+0x454>
     936:	f0 c0       	rjmp	.+480    	; 0xb18 <vfprintf+0x656>
     938:	84 36       	cpi	r24, 0x64	; 100
     93a:	11 f0       	breq	.+4      	; 0x940 <vfprintf+0x47e>
     93c:	89 36       	cpi	r24, 0x69	; 105
     93e:	59 f5       	brne	.+86     	; 0x996 <vfprintf+0x4d4>
     940:	56 01       	movw	r10, r12
     942:	97 fe       	sbrs	r9, 7
     944:	09 c0       	rjmp	.+18     	; 0x958 <vfprintf+0x496>
     946:	24 e0       	ldi	r18, 0x04	; 4
     948:	a2 0e       	add	r10, r18
     94a:	b1 1c       	adc	r11, r1
     94c:	f6 01       	movw	r30, r12
     94e:	60 81       	ld	r22, Z
     950:	71 81       	ldd	r23, Z+1	; 0x01
     952:	82 81       	ldd	r24, Z+2	; 0x02
     954:	93 81       	ldd	r25, Z+3	; 0x03
     956:	0a c0       	rjmp	.+20     	; 0x96c <vfprintf+0x4aa>
     958:	f2 e0       	ldi	r31, 0x02	; 2
     95a:	af 0e       	add	r10, r31
     95c:	b1 1c       	adc	r11, r1
     95e:	f6 01       	movw	r30, r12
     960:	60 81       	ld	r22, Z
     962:	71 81       	ldd	r23, Z+1	; 0x01
     964:	07 2e       	mov	r0, r23
     966:	00 0c       	add	r0, r0
     968:	88 0b       	sbc	r24, r24
     96a:	99 0b       	sbc	r25, r25
     96c:	f9 2d       	mov	r31, r9
     96e:	ff 76       	andi	r31, 0x6F	; 111
     970:	9f 2e       	mov	r9, r31
     972:	97 ff       	sbrs	r25, 7
     974:	09 c0       	rjmp	.+18     	; 0x988 <vfprintf+0x4c6>
     976:	90 95       	com	r25
     978:	80 95       	com	r24
     97a:	70 95       	com	r23
     97c:	61 95       	neg	r22
     97e:	7f 4f       	sbci	r23, 0xFF	; 255
     980:	8f 4f       	sbci	r24, 0xFF	; 255
     982:	9f 4f       	sbci	r25, 0xFF	; 255
     984:	f0 68       	ori	r31, 0x80	; 128
     986:	9f 2e       	mov	r9, r31
     988:	2a e0       	ldi	r18, 0x0A	; 10
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	a3 01       	movw	r20, r6
     98e:	cc d4       	rcall	.+2456   	; 0x1328 <__ultoa_invert>
     990:	c8 2e       	mov	r12, r24
     992:	c6 18       	sub	r12, r6
     994:	3e c0       	rjmp	.+124    	; 0xa12 <vfprintf+0x550>
     996:	09 2d       	mov	r16, r9
     998:	85 37       	cpi	r24, 0x75	; 117
     99a:	21 f4       	brne	.+8      	; 0x9a4 <vfprintf+0x4e2>
     99c:	0f 7e       	andi	r16, 0xEF	; 239
     99e:	2a e0       	ldi	r18, 0x0A	; 10
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	1d c0       	rjmp	.+58     	; 0x9de <vfprintf+0x51c>
     9a4:	09 7f       	andi	r16, 0xF9	; 249
     9a6:	8f 36       	cpi	r24, 0x6F	; 111
     9a8:	91 f0       	breq	.+36     	; 0x9ce <vfprintf+0x50c>
     9aa:	18 f4       	brcc	.+6      	; 0x9b2 <vfprintf+0x4f0>
     9ac:	88 35       	cpi	r24, 0x58	; 88
     9ae:	59 f0       	breq	.+22     	; 0x9c6 <vfprintf+0x504>
     9b0:	bc c0       	rjmp	.+376    	; 0xb2a <vfprintf+0x668>
     9b2:	80 37       	cpi	r24, 0x70	; 112
     9b4:	19 f0       	breq	.+6      	; 0x9bc <vfprintf+0x4fa>
     9b6:	88 37       	cpi	r24, 0x78	; 120
     9b8:	11 f0       	breq	.+4      	; 0x9be <vfprintf+0x4fc>
     9ba:	b7 c0       	rjmp	.+366    	; 0xb2a <vfprintf+0x668>
     9bc:	00 61       	ori	r16, 0x10	; 16
     9be:	04 ff       	sbrs	r16, 4
     9c0:	09 c0       	rjmp	.+18     	; 0x9d4 <vfprintf+0x512>
     9c2:	04 60       	ori	r16, 0x04	; 4
     9c4:	07 c0       	rjmp	.+14     	; 0x9d4 <vfprintf+0x512>
     9c6:	94 fe       	sbrs	r9, 4
     9c8:	08 c0       	rjmp	.+16     	; 0x9da <vfprintf+0x518>
     9ca:	06 60       	ori	r16, 0x06	; 6
     9cc:	06 c0       	rjmp	.+12     	; 0x9da <vfprintf+0x518>
     9ce:	28 e0       	ldi	r18, 0x08	; 8
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	05 c0       	rjmp	.+10     	; 0x9de <vfprintf+0x51c>
     9d4:	20 e1       	ldi	r18, 0x10	; 16
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <vfprintf+0x51c>
     9da:	20 e1       	ldi	r18, 0x10	; 16
     9dc:	32 e0       	ldi	r19, 0x02	; 2
     9de:	56 01       	movw	r10, r12
     9e0:	07 ff       	sbrs	r16, 7
     9e2:	09 c0       	rjmp	.+18     	; 0x9f6 <vfprintf+0x534>
     9e4:	84 e0       	ldi	r24, 0x04	; 4
     9e6:	a8 0e       	add	r10, r24
     9e8:	b1 1c       	adc	r11, r1
     9ea:	f6 01       	movw	r30, r12
     9ec:	60 81       	ld	r22, Z
     9ee:	71 81       	ldd	r23, Z+1	; 0x01
     9f0:	82 81       	ldd	r24, Z+2	; 0x02
     9f2:	93 81       	ldd	r25, Z+3	; 0x03
     9f4:	08 c0       	rjmp	.+16     	; 0xa06 <vfprintf+0x544>
     9f6:	f2 e0       	ldi	r31, 0x02	; 2
     9f8:	af 0e       	add	r10, r31
     9fa:	b1 1c       	adc	r11, r1
     9fc:	f6 01       	movw	r30, r12
     9fe:	60 81       	ld	r22, Z
     a00:	71 81       	ldd	r23, Z+1	; 0x01
     a02:	80 e0       	ldi	r24, 0x00	; 0
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	a3 01       	movw	r20, r6
     a08:	8f d4       	rcall	.+2334   	; 0x1328 <__ultoa_invert>
     a0a:	c8 2e       	mov	r12, r24
     a0c:	c6 18       	sub	r12, r6
     a0e:	0f 77       	andi	r16, 0x7F	; 127
     a10:	90 2e       	mov	r9, r16
     a12:	96 fe       	sbrs	r9, 6
     a14:	0b c0       	rjmp	.+22     	; 0xa2c <vfprintf+0x56a>
     a16:	09 2d       	mov	r16, r9
     a18:	0e 7f       	andi	r16, 0xFE	; 254
     a1a:	c1 16       	cp	r12, r17
     a1c:	50 f4       	brcc	.+20     	; 0xa32 <vfprintf+0x570>
     a1e:	94 fe       	sbrs	r9, 4
     a20:	0a c0       	rjmp	.+20     	; 0xa36 <vfprintf+0x574>
     a22:	92 fc       	sbrc	r9, 2
     a24:	08 c0       	rjmp	.+16     	; 0xa36 <vfprintf+0x574>
     a26:	09 2d       	mov	r16, r9
     a28:	0e 7e       	andi	r16, 0xEE	; 238
     a2a:	05 c0       	rjmp	.+10     	; 0xa36 <vfprintf+0x574>
     a2c:	dc 2c       	mov	r13, r12
     a2e:	09 2d       	mov	r16, r9
     a30:	03 c0       	rjmp	.+6      	; 0xa38 <vfprintf+0x576>
     a32:	dc 2c       	mov	r13, r12
     a34:	01 c0       	rjmp	.+2      	; 0xa38 <vfprintf+0x576>
     a36:	d1 2e       	mov	r13, r17
     a38:	04 ff       	sbrs	r16, 4
     a3a:	0d c0       	rjmp	.+26     	; 0xa56 <vfprintf+0x594>
     a3c:	fe 01       	movw	r30, r28
     a3e:	ec 0d       	add	r30, r12
     a40:	f1 1d       	adc	r31, r1
     a42:	80 81       	ld	r24, Z
     a44:	80 33       	cpi	r24, 0x30	; 48
     a46:	11 f4       	brne	.+4      	; 0xa4c <vfprintf+0x58a>
     a48:	09 7e       	andi	r16, 0xE9	; 233
     a4a:	09 c0       	rjmp	.+18     	; 0xa5e <vfprintf+0x59c>
     a4c:	02 ff       	sbrs	r16, 2
     a4e:	06 c0       	rjmp	.+12     	; 0xa5c <vfprintf+0x59a>
     a50:	d3 94       	inc	r13
     a52:	d3 94       	inc	r13
     a54:	04 c0       	rjmp	.+8      	; 0xa5e <vfprintf+0x59c>
     a56:	80 2f       	mov	r24, r16
     a58:	86 78       	andi	r24, 0x86	; 134
     a5a:	09 f0       	breq	.+2      	; 0xa5e <vfprintf+0x59c>
     a5c:	d3 94       	inc	r13
     a5e:	03 fd       	sbrc	r16, 3
     a60:	10 c0       	rjmp	.+32     	; 0xa82 <vfprintf+0x5c0>
     a62:	00 ff       	sbrs	r16, 0
     a64:	06 c0       	rjmp	.+12     	; 0xa72 <vfprintf+0x5b0>
     a66:	1c 2d       	mov	r17, r12
     a68:	d5 14       	cp	r13, r5
     a6a:	78 f4       	brcc	.+30     	; 0xa8a <vfprintf+0x5c8>
     a6c:	15 0d       	add	r17, r5
     a6e:	1d 19       	sub	r17, r13
     a70:	0c c0       	rjmp	.+24     	; 0xa8a <vfprintf+0x5c8>
     a72:	d5 14       	cp	r13, r5
     a74:	50 f4       	brcc	.+20     	; 0xa8a <vfprintf+0x5c8>
     a76:	b7 01       	movw	r22, r14
     a78:	80 e2       	ldi	r24, 0x20	; 32
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	19 d4       	rcall	.+2098   	; 0x12b0 <fputc>
     a7e:	d3 94       	inc	r13
     a80:	f8 cf       	rjmp	.-16     	; 0xa72 <vfprintf+0x5b0>
     a82:	d5 14       	cp	r13, r5
     a84:	10 f4       	brcc	.+4      	; 0xa8a <vfprintf+0x5c8>
     a86:	5d 18       	sub	r5, r13
     a88:	01 c0       	rjmp	.+2      	; 0xa8c <vfprintf+0x5ca>
     a8a:	51 2c       	mov	r5, r1
     a8c:	04 ff       	sbrs	r16, 4
     a8e:	0f c0       	rjmp	.+30     	; 0xaae <vfprintf+0x5ec>
     a90:	b7 01       	movw	r22, r14
     a92:	80 e3       	ldi	r24, 0x30	; 48
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	0c d4       	rcall	.+2072   	; 0x12b0 <fputc>
     a98:	02 ff       	sbrs	r16, 2
     a9a:	16 c0       	rjmp	.+44     	; 0xac8 <vfprintf+0x606>
     a9c:	01 fd       	sbrc	r16, 1
     a9e:	03 c0       	rjmp	.+6      	; 0xaa6 <vfprintf+0x5e4>
     aa0:	88 e7       	ldi	r24, 0x78	; 120
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	02 c0       	rjmp	.+4      	; 0xaaa <vfprintf+0x5e8>
     aa6:	88 e5       	ldi	r24, 0x58	; 88
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	b7 01       	movw	r22, r14
     aac:	0c c0       	rjmp	.+24     	; 0xac6 <vfprintf+0x604>
     aae:	80 2f       	mov	r24, r16
     ab0:	86 78       	andi	r24, 0x86	; 134
     ab2:	51 f0       	breq	.+20     	; 0xac8 <vfprintf+0x606>
     ab4:	01 ff       	sbrs	r16, 1
     ab6:	02 c0       	rjmp	.+4      	; 0xabc <vfprintf+0x5fa>
     ab8:	8b e2       	ldi	r24, 0x2B	; 43
     aba:	01 c0       	rjmp	.+2      	; 0xabe <vfprintf+0x5fc>
     abc:	80 e2       	ldi	r24, 0x20	; 32
     abe:	07 fd       	sbrc	r16, 7
     ac0:	8d e2       	ldi	r24, 0x2D	; 45
     ac2:	b7 01       	movw	r22, r14
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	f4 d3       	rcall	.+2024   	; 0x12b0 <fputc>
     ac8:	c1 16       	cp	r12, r17
     aca:	30 f4       	brcc	.+12     	; 0xad8 <vfprintf+0x616>
     acc:	b7 01       	movw	r22, r14
     ace:	80 e3       	ldi	r24, 0x30	; 48
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	ee d3       	rcall	.+2012   	; 0x12b0 <fputc>
     ad4:	11 50       	subi	r17, 0x01	; 1
     ad6:	f8 cf       	rjmp	.-16     	; 0xac8 <vfprintf+0x606>
     ad8:	ca 94       	dec	r12
     ada:	f3 01       	movw	r30, r6
     adc:	ec 0d       	add	r30, r12
     ade:	f1 1d       	adc	r31, r1
     ae0:	80 81       	ld	r24, Z
     ae2:	b7 01       	movw	r22, r14
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	e4 d3       	rcall	.+1992   	; 0x12b0 <fputc>
     ae8:	c1 10       	cpse	r12, r1
     aea:	f6 cf       	rjmp	.-20     	; 0xad8 <vfprintf+0x616>
     aec:	15 c0       	rjmp	.+42     	; 0xb18 <vfprintf+0x656>
     aee:	f4 e0       	ldi	r31, 0x04	; 4
     af0:	f5 15       	cp	r31, r5
     af2:	50 f5       	brcc	.+84     	; 0xb48 <vfprintf+0x686>
     af4:	84 e0       	ldi	r24, 0x04	; 4
     af6:	58 1a       	sub	r5, r24
     af8:	93 fe       	sbrs	r9, 3
     afa:	1e c0       	rjmp	.+60     	; 0xb38 <vfprintf+0x676>
     afc:	01 11       	cpse	r16, r1
     afe:	25 c0       	rjmp	.+74     	; 0xb4a <vfprintf+0x688>
     b00:	2c 85       	ldd	r18, Y+12	; 0x0c
     b02:	23 ff       	sbrs	r18, 3
     b04:	27 c0       	rjmp	.+78     	; 0xb54 <vfprintf+0x692>
     b06:	06 e2       	ldi	r16, 0x26	; 38
     b08:	10 e0       	ldi	r17, 0x00	; 0
     b0a:	39 2d       	mov	r19, r9
     b0c:	30 71       	andi	r19, 0x10	; 16
     b0e:	93 2e       	mov	r9, r19
     b10:	f8 01       	movw	r30, r16
     b12:	84 91       	lpm	r24, Z
     b14:	81 11       	cpse	r24, r1
     b16:	21 c0       	rjmp	.+66     	; 0xb5a <vfprintf+0x698>
     b18:	55 20       	and	r5, r5
     b1a:	09 f4       	brne	.+2      	; 0xb1e <vfprintf+0x65c>
     b1c:	fc cc       	rjmp	.-1544   	; 0x516 <vfprintf+0x54>
     b1e:	b7 01       	movw	r22, r14
     b20:	80 e2       	ldi	r24, 0x20	; 32
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	c5 d3       	rcall	.+1930   	; 0x12b0 <fputc>
     b26:	5a 94       	dec	r5
     b28:	f7 cf       	rjmp	.-18     	; 0xb18 <vfprintf+0x656>
     b2a:	f7 01       	movw	r30, r14
     b2c:	86 81       	ldd	r24, Z+6	; 0x06
     b2e:	97 81       	ldd	r25, Z+7	; 0x07
     b30:	23 c0       	rjmp	.+70     	; 0xb78 <vfprintf+0x6b6>
     b32:	8f ef       	ldi	r24, 0xFF	; 255
     b34:	9f ef       	ldi	r25, 0xFF	; 255
     b36:	20 c0       	rjmp	.+64     	; 0xb78 <vfprintf+0x6b6>
     b38:	b7 01       	movw	r22, r14
     b3a:	80 e2       	ldi	r24, 0x20	; 32
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	b8 d3       	rcall	.+1904   	; 0x12b0 <fputc>
     b40:	5a 94       	dec	r5
     b42:	51 10       	cpse	r5, r1
     b44:	f9 cf       	rjmp	.-14     	; 0xb38 <vfprintf+0x676>
     b46:	da cf       	rjmp	.-76     	; 0xafc <vfprintf+0x63a>
     b48:	51 2c       	mov	r5, r1
     b4a:	b7 01       	movw	r22, r14
     b4c:	80 2f       	mov	r24, r16
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	af d3       	rcall	.+1886   	; 0x12b0 <fputc>
     b52:	d6 cf       	rjmp	.-84     	; 0xb00 <vfprintf+0x63e>
     b54:	0a e2       	ldi	r16, 0x2A	; 42
     b56:	10 e0       	ldi	r17, 0x00	; 0
     b58:	d8 cf       	rjmp	.-80     	; 0xb0a <vfprintf+0x648>
     b5a:	91 10       	cpse	r9, r1
     b5c:	80 52       	subi	r24, 0x20	; 32
     b5e:	b7 01       	movw	r22, r14
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	a6 d3       	rcall	.+1868   	; 0x12b0 <fputc>
     b64:	0f 5f       	subi	r16, 0xFF	; 255
     b66:	1f 4f       	sbci	r17, 0xFF	; 255
     b68:	d3 cf       	rjmp	.-90     	; 0xb10 <vfprintf+0x64e>
     b6a:	23 e0       	ldi	r18, 0x03	; 3
     b6c:	25 15       	cp	r18, r5
     b6e:	10 f4       	brcc	.+4      	; 0xb74 <vfprintf+0x6b2>
     b70:	83 e0       	ldi	r24, 0x03	; 3
     b72:	c1 cf       	rjmp	.-126    	; 0xaf6 <vfprintf+0x634>
     b74:	51 2c       	mov	r5, r1
     b76:	c4 cf       	rjmp	.-120    	; 0xb00 <vfprintf+0x63e>
     b78:	60 96       	adiw	r28, 0x10	; 16
     b7a:	e2 e1       	ldi	r30, 0x12	; 18
     b7c:	1c c0       	rjmp	.+56     	; 0xbb6 <__epilogue_restores__>

00000b7e <__prologue_saves__>:
     b7e:	2f 92       	push	r2
     b80:	3f 92       	push	r3
     b82:	4f 92       	push	r4
     b84:	5f 92       	push	r5
     b86:	6f 92       	push	r6
     b88:	7f 92       	push	r7
     b8a:	8f 92       	push	r8
     b8c:	9f 92       	push	r9
     b8e:	af 92       	push	r10
     b90:	bf 92       	push	r11
     b92:	cf 92       	push	r12
     b94:	df 92       	push	r13
     b96:	ef 92       	push	r14
     b98:	ff 92       	push	r15
     b9a:	0f 93       	push	r16
     b9c:	1f 93       	push	r17
     b9e:	cf 93       	push	r28
     ba0:	df 93       	push	r29
     ba2:	cd b7       	in	r28, 0x3d	; 61
     ba4:	de b7       	in	r29, 0x3e	; 62
     ba6:	ca 1b       	sub	r28, r26
     ba8:	db 0b       	sbc	r29, r27
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	f8 94       	cli
     bae:	de bf       	out	0x3e, r29	; 62
     bb0:	0f be       	out	0x3f, r0	; 63
     bb2:	cd bf       	out	0x3d, r28	; 61
     bb4:	09 94       	ijmp

00000bb6 <__epilogue_restores__>:
     bb6:	2a 88       	ldd	r2, Y+18	; 0x12
     bb8:	39 88       	ldd	r3, Y+17	; 0x11
     bba:	48 88       	ldd	r4, Y+16	; 0x10
     bbc:	5f 84       	ldd	r5, Y+15	; 0x0f
     bbe:	6e 84       	ldd	r6, Y+14	; 0x0e
     bc0:	7d 84       	ldd	r7, Y+13	; 0x0d
     bc2:	8c 84       	ldd	r8, Y+12	; 0x0c
     bc4:	9b 84       	ldd	r9, Y+11	; 0x0b
     bc6:	aa 84       	ldd	r10, Y+10	; 0x0a
     bc8:	b9 84       	ldd	r11, Y+9	; 0x09
     bca:	c8 84       	ldd	r12, Y+8	; 0x08
     bcc:	df 80       	ldd	r13, Y+7	; 0x07
     bce:	ee 80       	ldd	r14, Y+6	; 0x06
     bd0:	fd 80       	ldd	r15, Y+5	; 0x05
     bd2:	0c 81       	ldd	r16, Y+4	; 0x04
     bd4:	1b 81       	ldd	r17, Y+3	; 0x03
     bd6:	aa 81       	ldd	r26, Y+2	; 0x02
     bd8:	b9 81       	ldd	r27, Y+1	; 0x01
     bda:	ce 0f       	add	r28, r30
     bdc:	d1 1d       	adc	r29, r1
     bde:	0f b6       	in	r0, 0x3f	; 63
     be0:	f8 94       	cli
     be2:	de bf       	out	0x3e, r29	; 62
     be4:	0f be       	out	0x3f, r0	; 63
     be6:	cd bf       	out	0x3d, r28	; 61
     be8:	ed 01       	movw	r28, r26
     bea:	08 95       	ret

00000bec <malloc>:
     bec:	0f 93       	push	r16
     bee:	1f 93       	push	r17
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	82 30       	cpi	r24, 0x02	; 2
     bf6:	91 05       	cpc	r25, r1
     bf8:	10 f4       	brcc	.+4      	; 0xbfe <malloc+0x12>
     bfa:	82 e0       	ldi	r24, 0x02	; 2
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	e0 91 a9 00 	lds	r30, 0x00A9	; 0x8000a9 <__flp>
     c02:	f0 91 aa 00 	lds	r31, 0x00AA	; 0x8000aa <__flp+0x1>
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	a0 e0       	ldi	r26, 0x00	; 0
     c0c:	b0 e0       	ldi	r27, 0x00	; 0
     c0e:	30 97       	sbiw	r30, 0x00	; 0
     c10:	19 f1       	breq	.+70     	; 0xc58 <malloc+0x6c>
     c12:	40 81       	ld	r20, Z
     c14:	51 81       	ldd	r21, Z+1	; 0x01
     c16:	02 81       	ldd	r16, Z+2	; 0x02
     c18:	13 81       	ldd	r17, Z+3	; 0x03
     c1a:	48 17       	cp	r20, r24
     c1c:	59 07       	cpc	r21, r25
     c1e:	c8 f0       	brcs	.+50     	; 0xc52 <malloc+0x66>
     c20:	84 17       	cp	r24, r20
     c22:	95 07       	cpc	r25, r21
     c24:	69 f4       	brne	.+26     	; 0xc40 <malloc+0x54>
     c26:	10 97       	sbiw	r26, 0x00	; 0
     c28:	31 f0       	breq	.+12     	; 0xc36 <malloc+0x4a>
     c2a:	12 96       	adiw	r26, 0x02	; 2
     c2c:	0c 93       	st	X, r16
     c2e:	12 97       	sbiw	r26, 0x02	; 2
     c30:	13 96       	adiw	r26, 0x03	; 3
     c32:	1c 93       	st	X, r17
     c34:	27 c0       	rjmp	.+78     	; 0xc84 <malloc+0x98>
     c36:	00 93 a9 00 	sts	0x00A9, r16	; 0x8000a9 <__flp>
     c3a:	10 93 aa 00 	sts	0x00AA, r17	; 0x8000aa <__flp+0x1>
     c3e:	22 c0       	rjmp	.+68     	; 0xc84 <malloc+0x98>
     c40:	21 15       	cp	r18, r1
     c42:	31 05       	cpc	r19, r1
     c44:	19 f0       	breq	.+6      	; 0xc4c <malloc+0x60>
     c46:	42 17       	cp	r20, r18
     c48:	53 07       	cpc	r21, r19
     c4a:	18 f4       	brcc	.+6      	; 0xc52 <malloc+0x66>
     c4c:	9a 01       	movw	r18, r20
     c4e:	bd 01       	movw	r22, r26
     c50:	ef 01       	movw	r28, r30
     c52:	df 01       	movw	r26, r30
     c54:	f8 01       	movw	r30, r16
     c56:	db cf       	rjmp	.-74     	; 0xc0e <malloc+0x22>
     c58:	21 15       	cp	r18, r1
     c5a:	31 05       	cpc	r19, r1
     c5c:	f9 f0       	breq	.+62     	; 0xc9c <malloc+0xb0>
     c5e:	28 1b       	sub	r18, r24
     c60:	39 0b       	sbc	r19, r25
     c62:	24 30       	cpi	r18, 0x04	; 4
     c64:	31 05       	cpc	r19, r1
     c66:	80 f4       	brcc	.+32     	; 0xc88 <malloc+0x9c>
     c68:	8a 81       	ldd	r24, Y+2	; 0x02
     c6a:	9b 81       	ldd	r25, Y+3	; 0x03
     c6c:	61 15       	cp	r22, r1
     c6e:	71 05       	cpc	r23, r1
     c70:	21 f0       	breq	.+8      	; 0xc7a <malloc+0x8e>
     c72:	fb 01       	movw	r30, r22
     c74:	93 83       	std	Z+3, r25	; 0x03
     c76:	82 83       	std	Z+2, r24	; 0x02
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <malloc+0x96>
     c7a:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <__flp+0x1>
     c7e:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <__flp>
     c82:	fe 01       	movw	r30, r28
     c84:	32 96       	adiw	r30, 0x02	; 2
     c86:	44 c0       	rjmp	.+136    	; 0xd10 <malloc+0x124>
     c88:	fe 01       	movw	r30, r28
     c8a:	e2 0f       	add	r30, r18
     c8c:	f3 1f       	adc	r31, r19
     c8e:	81 93       	st	Z+, r24
     c90:	91 93       	st	Z+, r25
     c92:	22 50       	subi	r18, 0x02	; 2
     c94:	31 09       	sbc	r19, r1
     c96:	39 83       	std	Y+1, r19	; 0x01
     c98:	28 83       	st	Y, r18
     c9a:	3a c0       	rjmp	.+116    	; 0xd10 <malloc+0x124>
     c9c:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <__brkval>
     ca0:	30 91 a8 00 	lds	r19, 0x00A8	; 0x8000a8 <__brkval+0x1>
     ca4:	23 2b       	or	r18, r19
     ca6:	41 f4       	brne	.+16     	; 0xcb8 <malloc+0xcc>
     ca8:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
     cac:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
     cb0:	30 93 a8 00 	sts	0x00A8, r19	; 0x8000a8 <__brkval+0x1>
     cb4:	20 93 a7 00 	sts	0x00A7, r18	; 0x8000a7 <__brkval>
     cb8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
     cbc:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
     cc0:	21 15       	cp	r18, r1
     cc2:	31 05       	cpc	r19, r1
     cc4:	41 f4       	brne	.+16     	; 0xcd6 <malloc+0xea>
     cc6:	2d b7       	in	r18, 0x3d	; 61
     cc8:	3e b7       	in	r19, 0x3e	; 62
     cca:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
     cce:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
     cd2:	24 1b       	sub	r18, r20
     cd4:	35 0b       	sbc	r19, r21
     cd6:	e0 91 a7 00 	lds	r30, 0x00A7	; 0x8000a7 <__brkval>
     cda:	f0 91 a8 00 	lds	r31, 0x00A8	; 0x8000a8 <__brkval+0x1>
     cde:	e2 17       	cp	r30, r18
     ce0:	f3 07       	cpc	r31, r19
     ce2:	a0 f4       	brcc	.+40     	; 0xd0c <malloc+0x120>
     ce4:	2e 1b       	sub	r18, r30
     ce6:	3f 0b       	sbc	r19, r31
     ce8:	28 17       	cp	r18, r24
     cea:	39 07       	cpc	r19, r25
     cec:	78 f0       	brcs	.+30     	; 0xd0c <malloc+0x120>
     cee:	ac 01       	movw	r20, r24
     cf0:	4e 5f       	subi	r20, 0xFE	; 254
     cf2:	5f 4f       	sbci	r21, 0xFF	; 255
     cf4:	24 17       	cp	r18, r20
     cf6:	35 07       	cpc	r19, r21
     cf8:	48 f0       	brcs	.+18     	; 0xd0c <malloc+0x120>
     cfa:	4e 0f       	add	r20, r30
     cfc:	5f 1f       	adc	r21, r31
     cfe:	50 93 a8 00 	sts	0x00A8, r21	; 0x8000a8 <__brkval+0x1>
     d02:	40 93 a7 00 	sts	0x00A7, r20	; 0x8000a7 <__brkval>
     d06:	81 93       	st	Z+, r24
     d08:	91 93       	st	Z+, r25
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <malloc+0x124>
     d0c:	e0 e0       	ldi	r30, 0x00	; 0
     d0e:	f0 e0       	ldi	r31, 0x00	; 0
     d10:	cf 01       	movw	r24, r30
     d12:	df 91       	pop	r29
     d14:	cf 91       	pop	r28
     d16:	1f 91       	pop	r17
     d18:	0f 91       	pop	r16
     d1a:	08 95       	ret

00000d1c <free>:
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	00 97       	sbiw	r24, 0x00	; 0
     d22:	09 f4       	brne	.+2      	; 0xd26 <free+0xa>
     d24:	81 c0       	rjmp	.+258    	; 0xe28 <free+0x10c>
     d26:	fc 01       	movw	r30, r24
     d28:	32 97       	sbiw	r30, 0x02	; 2
     d2a:	13 82       	std	Z+3, r1	; 0x03
     d2c:	12 82       	std	Z+2, r1	; 0x02
     d2e:	a0 91 a9 00 	lds	r26, 0x00A9	; 0x8000a9 <__flp>
     d32:	b0 91 aa 00 	lds	r27, 0x00AA	; 0x8000aa <__flp+0x1>
     d36:	10 97       	sbiw	r26, 0x00	; 0
     d38:	81 f4       	brne	.+32     	; 0xd5a <free+0x3e>
     d3a:	20 81       	ld	r18, Z
     d3c:	31 81       	ldd	r19, Z+1	; 0x01
     d3e:	82 0f       	add	r24, r18
     d40:	93 1f       	adc	r25, r19
     d42:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <__brkval>
     d46:	30 91 a8 00 	lds	r19, 0x00A8	; 0x8000a8 <__brkval+0x1>
     d4a:	28 17       	cp	r18, r24
     d4c:	39 07       	cpc	r19, r25
     d4e:	51 f5       	brne	.+84     	; 0xda4 <free+0x88>
     d50:	f0 93 a8 00 	sts	0x00A8, r31	; 0x8000a8 <__brkval+0x1>
     d54:	e0 93 a7 00 	sts	0x00A7, r30	; 0x8000a7 <__brkval>
     d58:	67 c0       	rjmp	.+206    	; 0xe28 <free+0x10c>
     d5a:	ed 01       	movw	r28, r26
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	ce 17       	cp	r28, r30
     d62:	df 07       	cpc	r29, r31
     d64:	40 f4       	brcc	.+16     	; 0xd76 <free+0x5a>
     d66:	4a 81       	ldd	r20, Y+2	; 0x02
     d68:	5b 81       	ldd	r21, Y+3	; 0x03
     d6a:	9e 01       	movw	r18, r28
     d6c:	41 15       	cp	r20, r1
     d6e:	51 05       	cpc	r21, r1
     d70:	f1 f0       	breq	.+60     	; 0xdae <free+0x92>
     d72:	ea 01       	movw	r28, r20
     d74:	f5 cf       	rjmp	.-22     	; 0xd60 <free+0x44>
     d76:	d3 83       	std	Z+3, r29	; 0x03
     d78:	c2 83       	std	Z+2, r28	; 0x02
     d7a:	40 81       	ld	r20, Z
     d7c:	51 81       	ldd	r21, Z+1	; 0x01
     d7e:	84 0f       	add	r24, r20
     d80:	95 1f       	adc	r25, r21
     d82:	c8 17       	cp	r28, r24
     d84:	d9 07       	cpc	r29, r25
     d86:	59 f4       	brne	.+22     	; 0xd9e <free+0x82>
     d88:	88 81       	ld	r24, Y
     d8a:	99 81       	ldd	r25, Y+1	; 0x01
     d8c:	84 0f       	add	r24, r20
     d8e:	95 1f       	adc	r25, r21
     d90:	02 96       	adiw	r24, 0x02	; 2
     d92:	91 83       	std	Z+1, r25	; 0x01
     d94:	80 83       	st	Z, r24
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	9b 81       	ldd	r25, Y+3	; 0x03
     d9a:	93 83       	std	Z+3, r25	; 0x03
     d9c:	82 83       	std	Z+2, r24	; 0x02
     d9e:	21 15       	cp	r18, r1
     da0:	31 05       	cpc	r19, r1
     da2:	29 f4       	brne	.+10     	; 0xdae <free+0x92>
     da4:	f0 93 aa 00 	sts	0x00AA, r31	; 0x8000aa <__flp+0x1>
     da8:	e0 93 a9 00 	sts	0x00A9, r30	; 0x8000a9 <__flp>
     dac:	3d c0       	rjmp	.+122    	; 0xe28 <free+0x10c>
     dae:	e9 01       	movw	r28, r18
     db0:	fb 83       	std	Y+3, r31	; 0x03
     db2:	ea 83       	std	Y+2, r30	; 0x02
     db4:	49 91       	ld	r20, Y+
     db6:	59 91       	ld	r21, Y+
     db8:	c4 0f       	add	r28, r20
     dba:	d5 1f       	adc	r29, r21
     dbc:	ec 17       	cp	r30, r28
     dbe:	fd 07       	cpc	r31, r29
     dc0:	61 f4       	brne	.+24     	; 0xdda <free+0xbe>
     dc2:	80 81       	ld	r24, Z
     dc4:	91 81       	ldd	r25, Z+1	; 0x01
     dc6:	84 0f       	add	r24, r20
     dc8:	95 1f       	adc	r25, r21
     dca:	02 96       	adiw	r24, 0x02	; 2
     dcc:	e9 01       	movw	r28, r18
     dce:	99 83       	std	Y+1, r25	; 0x01
     dd0:	88 83       	st	Y, r24
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	9b 83       	std	Y+3, r25	; 0x03
     dd8:	8a 83       	std	Y+2, r24	; 0x02
     dda:	e0 e0       	ldi	r30, 0x00	; 0
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	12 96       	adiw	r26, 0x02	; 2
     de0:	8d 91       	ld	r24, X+
     de2:	9c 91       	ld	r25, X
     de4:	13 97       	sbiw	r26, 0x03	; 3
     de6:	00 97       	sbiw	r24, 0x00	; 0
     de8:	19 f0       	breq	.+6      	; 0xdf0 <free+0xd4>
     dea:	fd 01       	movw	r30, r26
     dec:	dc 01       	movw	r26, r24
     dee:	f7 cf       	rjmp	.-18     	; 0xdde <free+0xc2>
     df0:	8d 91       	ld	r24, X+
     df2:	9c 91       	ld	r25, X
     df4:	11 97       	sbiw	r26, 0x01	; 1
     df6:	9d 01       	movw	r18, r26
     df8:	2e 5f       	subi	r18, 0xFE	; 254
     dfa:	3f 4f       	sbci	r19, 0xFF	; 255
     dfc:	82 0f       	add	r24, r18
     dfe:	93 1f       	adc	r25, r19
     e00:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <__brkval>
     e04:	30 91 a8 00 	lds	r19, 0x00A8	; 0x8000a8 <__brkval+0x1>
     e08:	28 17       	cp	r18, r24
     e0a:	39 07       	cpc	r19, r25
     e0c:	69 f4       	brne	.+26     	; 0xe28 <free+0x10c>
     e0e:	30 97       	sbiw	r30, 0x00	; 0
     e10:	29 f4       	brne	.+10     	; 0xe1c <free+0x100>
     e12:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <__flp+0x1>
     e16:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__flp>
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <free+0x104>
     e1c:	13 82       	std	Z+3, r1	; 0x03
     e1e:	12 82       	std	Z+2, r1	; 0x02
     e20:	b0 93 a8 00 	sts	0x00A8, r27	; 0x8000a8 <__brkval+0x1>
     e24:	a0 93 a7 00 	sts	0x00A7, r26	; 0x8000a7 <__brkval>
     e28:	df 91       	pop	r29
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <realloc>:
     e2e:	a0 e0       	ldi	r26, 0x00	; 0
     e30:	b0 e0       	ldi	r27, 0x00	; 0
     e32:	ec e1       	ldi	r30, 0x1C	; 28
     e34:	f7 e0       	ldi	r31, 0x07	; 7
     e36:	a7 ce       	rjmp	.-690    	; 0xb86 <__prologue_saves__+0x8>
     e38:	ec 01       	movw	r28, r24
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	19 f4       	brne	.+6      	; 0xe44 <realloc+0x16>
     e3e:	cb 01       	movw	r24, r22
     e40:	d5 de       	rcall	.-598    	; 0xbec <malloc>
     e42:	b0 c0       	rjmp	.+352    	; 0xfa4 <realloc+0x176>
     e44:	fc 01       	movw	r30, r24
     e46:	e6 0f       	add	r30, r22
     e48:	f7 1f       	adc	r31, r23
     e4a:	9c 01       	movw	r18, r24
     e4c:	22 50       	subi	r18, 0x02	; 2
     e4e:	31 09       	sbc	r19, r1
     e50:	e2 17       	cp	r30, r18
     e52:	f3 07       	cpc	r31, r19
     e54:	08 f4       	brcc	.+2      	; 0xe58 <realloc+0x2a>
     e56:	a4 c0       	rjmp	.+328    	; 0xfa0 <realloc+0x172>
     e58:	d9 01       	movw	r26, r18
     e5a:	0d 91       	ld	r16, X+
     e5c:	1c 91       	ld	r17, X
     e5e:	11 97       	sbiw	r26, 0x01	; 1
     e60:	06 17       	cp	r16, r22
     e62:	17 07       	cpc	r17, r23
     e64:	a8 f0       	brcs	.+42     	; 0xe90 <realloc+0x62>
     e66:	05 30       	cpi	r16, 0x05	; 5
     e68:	11 05       	cpc	r17, r1
     e6a:	08 f4       	brcc	.+2      	; 0xe6e <realloc+0x40>
     e6c:	97 c0       	rjmp	.+302    	; 0xf9c <realloc+0x16e>
     e6e:	c8 01       	movw	r24, r16
     e70:	04 97       	sbiw	r24, 0x04	; 4
     e72:	86 17       	cp	r24, r22
     e74:	97 07       	cpc	r25, r23
     e76:	08 f4       	brcc	.+2      	; 0xe7a <realloc+0x4c>
     e78:	91 c0       	rjmp	.+290    	; 0xf9c <realloc+0x16e>
     e7a:	02 50       	subi	r16, 0x02	; 2
     e7c:	11 09       	sbc	r17, r1
     e7e:	06 1b       	sub	r16, r22
     e80:	17 0b       	sbc	r17, r23
     e82:	01 93       	st	Z+, r16
     e84:	11 93       	st	Z+, r17
     e86:	6d 93       	st	X+, r22
     e88:	7c 93       	st	X, r23
     e8a:	cf 01       	movw	r24, r30
     e8c:	47 df       	rcall	.-370    	; 0xd1c <free>
     e8e:	86 c0       	rjmp	.+268    	; 0xf9c <realloc+0x16e>
     e90:	5b 01       	movw	r10, r22
     e92:	a0 1a       	sub	r10, r16
     e94:	b1 0a       	sbc	r11, r17
     e96:	4c 01       	movw	r8, r24
     e98:	80 0e       	add	r8, r16
     e9a:	91 1e       	adc	r9, r17
     e9c:	a0 91 a9 00 	lds	r26, 0x00A9	; 0x8000a9 <__flp>
     ea0:	b0 91 aa 00 	lds	r27, 0x00AA	; 0x8000aa <__flp+0x1>
     ea4:	61 2c       	mov	r6, r1
     ea6:	71 2c       	mov	r7, r1
     ea8:	e1 2c       	mov	r14, r1
     eaa:	f1 2c       	mov	r15, r1
     eac:	10 97       	sbiw	r26, 0x00	; 0
     eae:	09 f4       	brne	.+2      	; 0xeb2 <realloc+0x84>
     eb0:	46 c0       	rjmp	.+140    	; 0xf3e <realloc+0x110>
     eb2:	8d 91       	ld	r24, X+
     eb4:	9c 91       	ld	r25, X
     eb6:	11 97       	sbiw	r26, 0x01	; 1
     eb8:	a8 15       	cp	r26, r8
     eba:	b9 05       	cpc	r27, r9
     ebc:	b1 f5       	brne	.+108    	; 0xf2a <realloc+0xfc>
     ebe:	6c 01       	movw	r12, r24
     ec0:	42 e0       	ldi	r20, 0x02	; 2
     ec2:	c4 0e       	add	r12, r20
     ec4:	d1 1c       	adc	r13, r1
     ec6:	ca 14       	cp	r12, r10
     ec8:	db 04       	cpc	r13, r11
     eca:	78 f1       	brcs	.+94     	; 0xf2a <realloc+0xfc>
     ecc:	4c 01       	movw	r8, r24
     ece:	8a 18       	sub	r8, r10
     ed0:	9b 08       	sbc	r9, r11
     ed2:	64 01       	movw	r12, r8
     ed4:	42 e0       	ldi	r20, 0x02	; 2
     ed6:	c4 0e       	add	r12, r20
     ed8:	d1 1c       	adc	r13, r1
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	bc 90       	ld	r11, X
     ede:	12 97       	sbiw	r26, 0x02	; 2
     ee0:	13 96       	adiw	r26, 0x03	; 3
     ee2:	ac 91       	ld	r26, X
     ee4:	b5 e0       	ldi	r27, 0x05	; 5
     ee6:	cb 16       	cp	r12, r27
     ee8:	d1 04       	cpc	r13, r1
     eea:	40 f0       	brcs	.+16     	; 0xefc <realloc+0xce>
     eec:	b2 82       	std	Z+2, r11	; 0x02
     eee:	a3 83       	std	Z+3, r26	; 0x03
     ef0:	91 82       	std	Z+1, r9	; 0x01
     ef2:	80 82       	st	Z, r8
     ef4:	d9 01       	movw	r26, r18
     ef6:	6d 93       	st	X+, r22
     ef8:	7c 93       	st	X, r23
     efa:	09 c0       	rjmp	.+18     	; 0xf0e <realloc+0xe0>
     efc:	0e 5f       	subi	r16, 0xFE	; 254
     efe:	1f 4f       	sbci	r17, 0xFF	; 255
     f00:	80 0f       	add	r24, r16
     f02:	91 1f       	adc	r25, r17
     f04:	f9 01       	movw	r30, r18
     f06:	91 83       	std	Z+1, r25	; 0x01
     f08:	80 83       	st	Z, r24
     f0a:	eb 2d       	mov	r30, r11
     f0c:	fa 2f       	mov	r31, r26
     f0e:	e1 14       	cp	r14, r1
     f10:	f1 04       	cpc	r15, r1
     f12:	31 f0       	breq	.+12     	; 0xf20 <realloc+0xf2>
     f14:	d7 01       	movw	r26, r14
     f16:	13 96       	adiw	r26, 0x03	; 3
     f18:	fc 93       	st	X, r31
     f1a:	ee 93       	st	-X, r30
     f1c:	12 97       	sbiw	r26, 0x02	; 2
     f1e:	3e c0       	rjmp	.+124    	; 0xf9c <realloc+0x16e>
     f20:	f0 93 aa 00 	sts	0x00AA, r31	; 0x8000aa <__flp+0x1>
     f24:	e0 93 a9 00 	sts	0x00A9, r30	; 0x8000a9 <__flp>
     f28:	39 c0       	rjmp	.+114    	; 0xf9c <realloc+0x16e>
     f2a:	68 16       	cp	r6, r24
     f2c:	79 06       	cpc	r7, r25
     f2e:	08 f4       	brcc	.+2      	; 0xf32 <realloc+0x104>
     f30:	3c 01       	movw	r6, r24
     f32:	7d 01       	movw	r14, r26
     f34:	12 96       	adiw	r26, 0x02	; 2
     f36:	0d 90       	ld	r0, X+
     f38:	bc 91       	ld	r27, X
     f3a:	a0 2d       	mov	r26, r0
     f3c:	b7 cf       	rjmp	.-146    	; 0xeac <realloc+0x7e>
     f3e:	80 91 a7 00 	lds	r24, 0x00A7	; 0x8000a7 <__brkval>
     f42:	90 91 a8 00 	lds	r25, 0x00A8	; 0x8000a8 <__brkval+0x1>
     f46:	88 16       	cp	r8, r24
     f48:	99 06       	cpc	r9, r25
     f4a:	e1 f4       	brne	.+56     	; 0xf84 <realloc+0x156>
     f4c:	66 16       	cp	r6, r22
     f4e:	77 06       	cpc	r7, r23
     f50:	c8 f4       	brcc	.+50     	; 0xf84 <realloc+0x156>
     f52:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
     f56:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
     f5a:	00 97       	sbiw	r24, 0x00	; 0
     f5c:	41 f4       	brne	.+16     	; 0xf6e <realloc+0x140>
     f5e:	8d b7       	in	r24, 0x3d	; 61
     f60:	9e b7       	in	r25, 0x3e	; 62
     f62:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
     f66:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
     f6a:	84 1b       	sub	r24, r20
     f6c:	95 0b       	sbc	r25, r21
     f6e:	e8 17       	cp	r30, r24
     f70:	f9 07       	cpc	r31, r25
     f72:	b0 f4       	brcc	.+44     	; 0xfa0 <realloc+0x172>
     f74:	f0 93 a8 00 	sts	0x00A8, r31	; 0x8000a8 <__brkval+0x1>
     f78:	e0 93 a7 00 	sts	0x00A7, r30	; 0x8000a7 <__brkval>
     f7c:	f9 01       	movw	r30, r18
     f7e:	71 83       	std	Z+1, r23	; 0x01
     f80:	60 83       	st	Z, r22
     f82:	0c c0       	rjmp	.+24     	; 0xf9c <realloc+0x16e>
     f84:	cb 01       	movw	r24, r22
     f86:	32 de       	rcall	.-924    	; 0xbec <malloc>
     f88:	7c 01       	movw	r14, r24
     f8a:	00 97       	sbiw	r24, 0x00	; 0
     f8c:	49 f0       	breq	.+18     	; 0xfa0 <realloc+0x172>
     f8e:	a8 01       	movw	r20, r16
     f90:	be 01       	movw	r22, r28
     f92:	36 d1       	rcall	.+620    	; 0x1200 <memcpy>
     f94:	ce 01       	movw	r24, r28
     f96:	c2 de       	rcall	.-636    	; 0xd1c <free>
     f98:	c7 01       	movw	r24, r14
     f9a:	04 c0       	rjmp	.+8      	; 0xfa4 <realloc+0x176>
     f9c:	ce 01       	movw	r24, r28
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <realloc+0x176>
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
     fa8:	ee e0       	ldi	r30, 0x0E	; 14
     faa:	09 ce       	rjmp	.-1006   	; 0xbbe <__epilogue_restores__+0x8>

00000fac <atoi>:
     fac:	fc 01       	movw	r30, r24
     fae:	88 27       	eor	r24, r24
     fb0:	99 27       	eor	r25, r25
     fb2:	e8 94       	clt
     fb4:	21 91       	ld	r18, Z+
     fb6:	20 32       	cpi	r18, 0x20	; 32
     fb8:	e9 f3       	breq	.-6      	; 0xfb4 <atoi+0x8>
     fba:	29 30       	cpi	r18, 0x09	; 9
     fbc:	10 f0       	brcs	.+4      	; 0xfc2 <atoi+0x16>
     fbe:	2e 30       	cpi	r18, 0x0E	; 14
     fc0:	c8 f3       	brcs	.-14     	; 0xfb4 <atoi+0x8>
     fc2:	2b 32       	cpi	r18, 0x2B	; 43
     fc4:	39 f0       	breq	.+14     	; 0xfd4 <atoi+0x28>
     fc6:	2d 32       	cpi	r18, 0x2D	; 45
     fc8:	31 f4       	brne	.+12     	; 0xfd6 <atoi+0x2a>
     fca:	68 94       	set
     fcc:	03 c0       	rjmp	.+6      	; 0xfd4 <atoi+0x28>
     fce:	68 d1       	rcall	.+720    	; 0x12a0 <__mulhi_const_10>
     fd0:	82 0f       	add	r24, r18
     fd2:	91 1d       	adc	r25, r1
     fd4:	21 91       	ld	r18, Z+
     fd6:	20 53       	subi	r18, 0x30	; 48
     fd8:	2a 30       	cpi	r18, 0x0A	; 10
     fda:	c8 f3       	brcs	.-14     	; 0xfce <atoi+0x22>
     fdc:	1e f4       	brtc	.+6      	; 0xfe4 <atoi+0x38>
     fde:	90 95       	com	r25
     fe0:	81 95       	neg	r24
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	08 95       	ret

00000fe6 <atol>:
     fe6:	1f 93       	push	r17
     fe8:	fc 01       	movw	r30, r24
     fea:	99 27       	eor	r25, r25
     fec:	88 27       	eor	r24, r24
     fee:	bc 01       	movw	r22, r24
     ff0:	e8 94       	clt
     ff2:	11 91       	ld	r17, Z+
     ff4:	10 32       	cpi	r17, 0x20	; 32
     ff6:	e9 f3       	breq	.-6      	; 0xff2 <atol+0xc>
     ff8:	19 30       	cpi	r17, 0x09	; 9
     ffa:	10 f0       	brcs	.+4      	; 0x1000 <atol+0x1a>
     ffc:	1e 30       	cpi	r17, 0x0E	; 14
     ffe:	c8 f3       	brcs	.-14     	; 0xff2 <atol+0xc>
    1000:	1b 32       	cpi	r17, 0x2B	; 43
    1002:	49 f0       	breq	.+18     	; 0x1016 <atol+0x30>
    1004:	1d 32       	cpi	r17, 0x2D	; 45
    1006:	41 f4       	brne	.+16     	; 0x1018 <atol+0x32>
    1008:	68 94       	set
    100a:	05 c0       	rjmp	.+10     	; 0x1016 <atol+0x30>
    100c:	34 d1       	rcall	.+616    	; 0x1276 <__mulsi_const_10>
    100e:	61 0f       	add	r22, r17
    1010:	71 1d       	adc	r23, r1
    1012:	81 1d       	adc	r24, r1
    1014:	91 1d       	adc	r25, r1
    1016:	11 91       	ld	r17, Z+
    1018:	10 53       	subi	r17, 0x30	; 48
    101a:	1a 30       	cpi	r17, 0x0A	; 10
    101c:	b8 f3       	brcs	.-18     	; 0x100c <atol+0x26>
    101e:	3e f4       	brtc	.+14     	; 0x102e <atol+0x48>
    1020:	90 95       	com	r25
    1022:	80 95       	com	r24
    1024:	70 95       	com	r23
    1026:	61 95       	neg	r22
    1028:	7f 4f       	sbci	r23, 0xFF	; 255
    102a:	8f 4f       	sbci	r24, 0xFF	; 255
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	1f 91       	pop	r17
    1030:	08 95       	ret

00001032 <__ftoa_engine>:
    1032:	28 30       	cpi	r18, 0x08	; 8
    1034:	08 f0       	brcs	.+2      	; 0x1038 <__ftoa_engine+0x6>
    1036:	27 e0       	ldi	r18, 0x07	; 7
    1038:	33 27       	eor	r19, r19
    103a:	da 01       	movw	r26, r20
    103c:	99 0f       	add	r25, r25
    103e:	31 1d       	adc	r19, r1
    1040:	87 fd       	sbrc	r24, 7
    1042:	91 60       	ori	r25, 0x01	; 1
    1044:	00 96       	adiw	r24, 0x00	; 0
    1046:	61 05       	cpc	r22, r1
    1048:	71 05       	cpc	r23, r1
    104a:	39 f4       	brne	.+14     	; 0x105a <__ftoa_engine+0x28>
    104c:	32 60       	ori	r19, 0x02	; 2
    104e:	2e 5f       	subi	r18, 0xFE	; 254
    1050:	3d 93       	st	X+, r19
    1052:	30 e3       	ldi	r19, 0x30	; 48
    1054:	2a 95       	dec	r18
    1056:	e1 f7       	brne	.-8      	; 0x1050 <__ftoa_engine+0x1e>
    1058:	08 95       	ret
    105a:	9f 3f       	cpi	r25, 0xFF	; 255
    105c:	30 f0       	brcs	.+12     	; 0x106a <__ftoa_engine+0x38>
    105e:	80 38       	cpi	r24, 0x80	; 128
    1060:	71 05       	cpc	r23, r1
    1062:	61 05       	cpc	r22, r1
    1064:	09 f0       	breq	.+2      	; 0x1068 <__ftoa_engine+0x36>
    1066:	3c 5f       	subi	r19, 0xFC	; 252
    1068:	3c 5f       	subi	r19, 0xFC	; 252
    106a:	3d 93       	st	X+, r19
    106c:	91 30       	cpi	r25, 0x01	; 1
    106e:	08 f0       	brcs	.+2      	; 0x1072 <__ftoa_engine+0x40>
    1070:	80 68       	ori	r24, 0x80	; 128
    1072:	91 1d       	adc	r25, r1
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	1f 93       	push	r17
    107a:	0f 93       	push	r16
    107c:	ff 92       	push	r15
    107e:	ef 92       	push	r14
    1080:	19 2f       	mov	r17, r25
    1082:	98 7f       	andi	r25, 0xF8	; 248
    1084:	96 95       	lsr	r25
    1086:	e9 2f       	mov	r30, r25
    1088:	96 95       	lsr	r25
    108a:	96 95       	lsr	r25
    108c:	e9 0f       	add	r30, r25
    108e:	ff 27       	eor	r31, r31
    1090:	e8 57       	subi	r30, 0x78	; 120
    1092:	ff 4f       	sbci	r31, 0xFF	; 255
    1094:	99 27       	eor	r25, r25
    1096:	33 27       	eor	r19, r19
    1098:	ee 24       	eor	r14, r14
    109a:	ff 24       	eor	r15, r15
    109c:	a7 01       	movw	r20, r14
    109e:	e7 01       	movw	r28, r14
    10a0:	05 90       	lpm	r0, Z+
    10a2:	08 94       	sec
    10a4:	07 94       	ror	r0
    10a6:	28 f4       	brcc	.+10     	; 0x10b2 <__ftoa_engine+0x80>
    10a8:	36 0f       	add	r19, r22
    10aa:	e7 1e       	adc	r14, r23
    10ac:	f8 1e       	adc	r15, r24
    10ae:	49 1f       	adc	r20, r25
    10b0:	51 1d       	adc	r21, r1
    10b2:	66 0f       	add	r22, r22
    10b4:	77 1f       	adc	r23, r23
    10b6:	88 1f       	adc	r24, r24
    10b8:	99 1f       	adc	r25, r25
    10ba:	06 94       	lsr	r0
    10bc:	a1 f7       	brne	.-24     	; 0x10a6 <__ftoa_engine+0x74>
    10be:	05 90       	lpm	r0, Z+
    10c0:	07 94       	ror	r0
    10c2:	28 f4       	brcc	.+10     	; 0x10ce <__ftoa_engine+0x9c>
    10c4:	e7 0e       	add	r14, r23
    10c6:	f8 1e       	adc	r15, r24
    10c8:	49 1f       	adc	r20, r25
    10ca:	56 1f       	adc	r21, r22
    10cc:	c1 1d       	adc	r28, r1
    10ce:	77 0f       	add	r23, r23
    10d0:	88 1f       	adc	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	66 1f       	adc	r22, r22
    10d6:	06 94       	lsr	r0
    10d8:	a1 f7       	brne	.-24     	; 0x10c2 <__ftoa_engine+0x90>
    10da:	05 90       	lpm	r0, Z+
    10dc:	07 94       	ror	r0
    10de:	28 f4       	brcc	.+10     	; 0x10ea <__ftoa_engine+0xb8>
    10e0:	f8 0e       	add	r15, r24
    10e2:	49 1f       	adc	r20, r25
    10e4:	56 1f       	adc	r21, r22
    10e6:	c7 1f       	adc	r28, r23
    10e8:	d1 1d       	adc	r29, r1
    10ea:	88 0f       	add	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	66 1f       	adc	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	06 94       	lsr	r0
    10f4:	a1 f7       	brne	.-24     	; 0x10de <__ftoa_engine+0xac>
    10f6:	05 90       	lpm	r0, Z+
    10f8:	07 94       	ror	r0
    10fa:	20 f4       	brcc	.+8      	; 0x1104 <__ftoa_engine+0xd2>
    10fc:	49 0f       	add	r20, r25
    10fe:	56 1f       	adc	r21, r22
    1100:	c7 1f       	adc	r28, r23
    1102:	d8 1f       	adc	r29, r24
    1104:	99 0f       	add	r25, r25
    1106:	66 1f       	adc	r22, r22
    1108:	77 1f       	adc	r23, r23
    110a:	88 1f       	adc	r24, r24
    110c:	06 94       	lsr	r0
    110e:	a9 f7       	brne	.-22     	; 0x10fa <__ftoa_engine+0xc8>
    1110:	84 91       	lpm	r24, Z
    1112:	10 95       	com	r17
    1114:	17 70       	andi	r17, 0x07	; 7
    1116:	41 f0       	breq	.+16     	; 0x1128 <__ftoa_engine+0xf6>
    1118:	d6 95       	lsr	r29
    111a:	c7 95       	ror	r28
    111c:	57 95       	ror	r21
    111e:	47 95       	ror	r20
    1120:	f7 94       	ror	r15
    1122:	e7 94       	ror	r14
    1124:	1a 95       	dec	r17
    1126:	c1 f7       	brne	.-16     	; 0x1118 <__ftoa_engine+0xe6>
    1128:	ee e2       	ldi	r30, 0x2E	; 46
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	68 94       	set
    112e:	15 90       	lpm	r1, Z+
    1130:	15 91       	lpm	r17, Z+
    1132:	35 91       	lpm	r19, Z+
    1134:	65 91       	lpm	r22, Z+
    1136:	95 91       	lpm	r25, Z+
    1138:	05 90       	lpm	r0, Z+
    113a:	7f e2       	ldi	r23, 0x2F	; 47
    113c:	73 95       	inc	r23
    113e:	e1 18       	sub	r14, r1
    1140:	f1 0a       	sbc	r15, r17
    1142:	43 0b       	sbc	r20, r19
    1144:	56 0b       	sbc	r21, r22
    1146:	c9 0b       	sbc	r28, r25
    1148:	d0 09       	sbc	r29, r0
    114a:	c0 f7       	brcc	.-16     	; 0x113c <__ftoa_engine+0x10a>
    114c:	e1 0c       	add	r14, r1
    114e:	f1 1e       	adc	r15, r17
    1150:	43 1f       	adc	r20, r19
    1152:	56 1f       	adc	r21, r22
    1154:	c9 1f       	adc	r28, r25
    1156:	d0 1d       	adc	r29, r0
    1158:	7e f4       	brtc	.+30     	; 0x1178 <__ftoa_engine+0x146>
    115a:	70 33       	cpi	r23, 0x30	; 48
    115c:	11 f4       	brne	.+4      	; 0x1162 <__ftoa_engine+0x130>
    115e:	8a 95       	dec	r24
    1160:	e6 cf       	rjmp	.-52     	; 0x112e <__ftoa_engine+0xfc>
    1162:	e8 94       	clt
    1164:	01 50       	subi	r16, 0x01	; 1
    1166:	30 f0       	brcs	.+12     	; 0x1174 <__ftoa_engine+0x142>
    1168:	08 0f       	add	r16, r24
    116a:	0a f4       	brpl	.+2      	; 0x116e <__ftoa_engine+0x13c>
    116c:	00 27       	eor	r16, r16
    116e:	02 17       	cp	r16, r18
    1170:	08 f4       	brcc	.+2      	; 0x1174 <__ftoa_engine+0x142>
    1172:	20 2f       	mov	r18, r16
    1174:	23 95       	inc	r18
    1176:	02 2f       	mov	r16, r18
    1178:	7a 33       	cpi	r23, 0x3A	; 58
    117a:	28 f0       	brcs	.+10     	; 0x1186 <__ftoa_engine+0x154>
    117c:	79 e3       	ldi	r23, 0x39	; 57
    117e:	7d 93       	st	X+, r23
    1180:	2a 95       	dec	r18
    1182:	e9 f7       	brne	.-6      	; 0x117e <__ftoa_engine+0x14c>
    1184:	10 c0       	rjmp	.+32     	; 0x11a6 <__ftoa_engine+0x174>
    1186:	7d 93       	st	X+, r23
    1188:	2a 95       	dec	r18
    118a:	89 f6       	brne	.-94     	; 0x112e <__ftoa_engine+0xfc>
    118c:	06 94       	lsr	r0
    118e:	97 95       	ror	r25
    1190:	67 95       	ror	r22
    1192:	37 95       	ror	r19
    1194:	17 95       	ror	r17
    1196:	17 94       	ror	r1
    1198:	e1 18       	sub	r14, r1
    119a:	f1 0a       	sbc	r15, r17
    119c:	43 0b       	sbc	r20, r19
    119e:	56 0b       	sbc	r21, r22
    11a0:	c9 0b       	sbc	r28, r25
    11a2:	d0 09       	sbc	r29, r0
    11a4:	98 f0       	brcs	.+38     	; 0x11cc <__ftoa_engine+0x19a>
    11a6:	23 95       	inc	r18
    11a8:	7e 91       	ld	r23, -X
    11aa:	73 95       	inc	r23
    11ac:	7a 33       	cpi	r23, 0x3A	; 58
    11ae:	08 f0       	brcs	.+2      	; 0x11b2 <__ftoa_engine+0x180>
    11b0:	70 e3       	ldi	r23, 0x30	; 48
    11b2:	7c 93       	st	X, r23
    11b4:	20 13       	cpse	r18, r16
    11b6:	b8 f7       	brcc	.-18     	; 0x11a6 <__ftoa_engine+0x174>
    11b8:	7e 91       	ld	r23, -X
    11ba:	70 61       	ori	r23, 0x10	; 16
    11bc:	7d 93       	st	X+, r23
    11be:	30 f0       	brcs	.+12     	; 0x11cc <__ftoa_engine+0x19a>
    11c0:	83 95       	inc	r24
    11c2:	71 e3       	ldi	r23, 0x31	; 49
    11c4:	7d 93       	st	X+, r23
    11c6:	70 e3       	ldi	r23, 0x30	; 48
    11c8:	2a 95       	dec	r18
    11ca:	e1 f7       	brne	.-8      	; 0x11c4 <__ftoa_engine+0x192>
    11cc:	11 24       	eor	r1, r1
    11ce:	ef 90       	pop	r14
    11d0:	ff 90       	pop	r15
    11d2:	0f 91       	pop	r16
    11d4:	1f 91       	pop	r17
    11d6:	cf 91       	pop	r28
    11d8:	df 91       	pop	r29
    11da:	99 27       	eor	r25, r25
    11dc:	87 fd       	sbrc	r24, 7
    11de:	90 95       	com	r25
    11e0:	08 95       	ret

000011e2 <strnlen_P>:
    11e2:	fc 01       	movw	r30, r24
    11e4:	05 90       	lpm	r0, Z+
    11e6:	61 50       	subi	r22, 0x01	; 1
    11e8:	70 40       	sbci	r23, 0x00	; 0
    11ea:	01 10       	cpse	r0, r1
    11ec:	d8 f7       	brcc	.-10     	; 0x11e4 <strnlen_P+0x2>
    11ee:	80 95       	com	r24
    11f0:	90 95       	com	r25
    11f2:	8e 0f       	add	r24, r30
    11f4:	9f 1f       	adc	r25, r31
    11f6:	08 95       	ret

000011f8 <strtok>:
    11f8:	4c e6       	ldi	r20, 0x6C	; 108
    11fa:	50 e0       	ldi	r21, 0x00	; 0
    11fc:	15 d0       	rcall	.+42     	; 0x1228 <strtok_r>
    11fe:	08 95       	ret

00001200 <memcpy>:
    1200:	fb 01       	movw	r30, r22
    1202:	dc 01       	movw	r26, r24
    1204:	02 c0       	rjmp	.+4      	; 0x120a <memcpy+0xa>
    1206:	01 90       	ld	r0, Z+
    1208:	0d 92       	st	X+, r0
    120a:	41 50       	subi	r20, 0x01	; 1
    120c:	50 40       	sbci	r21, 0x00	; 0
    120e:	d8 f7       	brcc	.-10     	; 0x1206 <memcpy+0x6>
    1210:	08 95       	ret

00001212 <strnlen>:
    1212:	fc 01       	movw	r30, r24
    1214:	61 50       	subi	r22, 0x01	; 1
    1216:	70 40       	sbci	r23, 0x00	; 0
    1218:	01 90       	ld	r0, Z+
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <strtok_r>:
    1228:	fa 01       	movw	r30, r20
    122a:	a1 91       	ld	r26, Z+
    122c:	b0 81       	ld	r27, Z
    122e:	00 97       	sbiw	r24, 0x00	; 0
    1230:	19 f4       	brne	.+6      	; 0x1238 <strtok_r+0x10>
    1232:	10 97       	sbiw	r26, 0x00	; 0
    1234:	e1 f0       	breq	.+56     	; 0x126e <strtok_r+0x46>
    1236:	cd 01       	movw	r24, r26
    1238:	dc 01       	movw	r26, r24
    123a:	cd 01       	movw	r24, r26
    123c:	0d 90       	ld	r0, X+
    123e:	00 20       	and	r0, r0
    1240:	11 f4       	brne	.+4      	; 0x1246 <strtok_r+0x1e>
    1242:	c0 01       	movw	r24, r0
    1244:	13 c0       	rjmp	.+38     	; 0x126c <strtok_r+0x44>
    1246:	fb 01       	movw	r30, r22
    1248:	21 91       	ld	r18, Z+
    124a:	22 23       	and	r18, r18
    124c:	19 f0       	breq	.+6      	; 0x1254 <strtok_r+0x2c>
    124e:	20 15       	cp	r18, r0
    1250:	d9 f7       	brne	.-10     	; 0x1248 <strtok_r+0x20>
    1252:	f3 cf       	rjmp	.-26     	; 0x123a <strtok_r+0x12>
    1254:	fb 01       	movw	r30, r22
    1256:	21 91       	ld	r18, Z+
    1258:	20 15       	cp	r18, r0
    125a:	19 f4       	brne	.+6      	; 0x1262 <strtok_r+0x3a>
    125c:	1e 92       	st	-X, r1
    125e:	11 96       	adiw	r26, 0x01	; 1
    1260:	06 c0       	rjmp	.+12     	; 0x126e <strtok_r+0x46>
    1262:	22 23       	and	r18, r18
    1264:	c1 f7       	brne	.-16     	; 0x1256 <strtok_r+0x2e>
    1266:	0d 90       	ld	r0, X+
    1268:	00 20       	and	r0, r0
    126a:	a1 f7       	brne	.-24     	; 0x1254 <strtok_r+0x2c>
    126c:	d0 01       	movw	r26, r0
    126e:	fa 01       	movw	r30, r20
    1270:	a1 93       	st	Z+, r26
    1272:	b0 83       	st	Z, r27
    1274:	08 95       	ret

00001276 <__mulsi_const_10>:
    1276:	59 2f       	mov	r21, r25
    1278:	48 2f       	mov	r20, r24
    127a:	37 2f       	mov	r19, r23
    127c:	26 2f       	mov	r18, r22
    127e:	66 0f       	add	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	88 1f       	adc	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	66 0f       	add	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	88 1f       	adc	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	62 0f       	add	r22, r18
    1290:	73 1f       	adc	r23, r19
    1292:	84 1f       	adc	r24, r20
    1294:	95 1f       	adc	r25, r21
    1296:	66 0f       	add	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	99 1f       	adc	r25, r25
    129e:	08 95       	ret

000012a0 <__mulhi_const_10>:
    12a0:	7a e0       	ldi	r23, 0x0A	; 10
    12a2:	97 9f       	mul	r25, r23
    12a4:	90 2d       	mov	r25, r0
    12a6:	87 9f       	mul	r24, r23
    12a8:	80 2d       	mov	r24, r0
    12aa:	91 0d       	add	r25, r1
    12ac:	11 24       	eor	r1, r1
    12ae:	08 95       	ret

000012b0 <fputc>:
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	fb 01       	movw	r30, r22
    12ba:	23 81       	ldd	r18, Z+3	; 0x03
    12bc:	21 fd       	sbrc	r18, 1
    12be:	03 c0       	rjmp	.+6      	; 0x12c6 <fputc+0x16>
    12c0:	8f ef       	ldi	r24, 0xFF	; 255
    12c2:	9f ef       	ldi	r25, 0xFF	; 255
    12c4:	2c c0       	rjmp	.+88     	; 0x131e <fputc+0x6e>
    12c6:	22 ff       	sbrs	r18, 2
    12c8:	16 c0       	rjmp	.+44     	; 0x12f6 <fputc+0x46>
    12ca:	46 81       	ldd	r20, Z+6	; 0x06
    12cc:	57 81       	ldd	r21, Z+7	; 0x07
    12ce:	24 81       	ldd	r18, Z+4	; 0x04
    12d0:	35 81       	ldd	r19, Z+5	; 0x05
    12d2:	42 17       	cp	r20, r18
    12d4:	53 07       	cpc	r21, r19
    12d6:	44 f4       	brge	.+16     	; 0x12e8 <fputc+0x38>
    12d8:	a0 81       	ld	r26, Z
    12da:	b1 81       	ldd	r27, Z+1	; 0x01
    12dc:	9d 01       	movw	r18, r26
    12de:	2f 5f       	subi	r18, 0xFF	; 255
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	31 83       	std	Z+1, r19	; 0x01
    12e4:	20 83       	st	Z, r18
    12e6:	8c 93       	st	X, r24
    12e8:	26 81       	ldd	r18, Z+6	; 0x06
    12ea:	37 81       	ldd	r19, Z+7	; 0x07
    12ec:	2f 5f       	subi	r18, 0xFF	; 255
    12ee:	3f 4f       	sbci	r19, 0xFF	; 255
    12f0:	37 83       	std	Z+7, r19	; 0x07
    12f2:	26 83       	std	Z+6, r18	; 0x06
    12f4:	14 c0       	rjmp	.+40     	; 0x131e <fputc+0x6e>
    12f6:	8b 01       	movw	r16, r22
    12f8:	ec 01       	movw	r28, r24
    12fa:	fb 01       	movw	r30, r22
    12fc:	00 84       	ldd	r0, Z+8	; 0x08
    12fe:	f1 85       	ldd	r31, Z+9	; 0x09
    1300:	e0 2d       	mov	r30, r0
    1302:	09 95       	icall
    1304:	89 2b       	or	r24, r25
    1306:	e1 f6       	brne	.-72     	; 0x12c0 <fputc+0x10>
    1308:	d8 01       	movw	r26, r16
    130a:	16 96       	adiw	r26, 0x06	; 6
    130c:	8d 91       	ld	r24, X+
    130e:	9c 91       	ld	r25, X
    1310:	17 97       	sbiw	r26, 0x07	; 7
    1312:	01 96       	adiw	r24, 0x01	; 1
    1314:	17 96       	adiw	r26, 0x07	; 7
    1316:	9c 93       	st	X, r25
    1318:	8e 93       	st	-X, r24
    131a:	16 97       	sbiw	r26, 0x06	; 6
    131c:	ce 01       	movw	r24, r28
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	0f 91       	pop	r16
    1326:	08 95       	ret

00001328 <__ultoa_invert>:
    1328:	fa 01       	movw	r30, r20
    132a:	aa 27       	eor	r26, r26
    132c:	28 30       	cpi	r18, 0x08	; 8
    132e:	51 f1       	breq	.+84     	; 0x1384 <__ultoa_invert+0x5c>
    1330:	20 31       	cpi	r18, 0x10	; 16
    1332:	81 f1       	breq	.+96     	; 0x1394 <__ultoa_invert+0x6c>
    1334:	e8 94       	clt
    1336:	6f 93       	push	r22
    1338:	6e 7f       	andi	r22, 0xFE	; 254
    133a:	6e 5f       	subi	r22, 0xFE	; 254
    133c:	7f 4f       	sbci	r23, 0xFF	; 255
    133e:	8f 4f       	sbci	r24, 0xFF	; 255
    1340:	9f 4f       	sbci	r25, 0xFF	; 255
    1342:	af 4f       	sbci	r26, 0xFF	; 255
    1344:	b1 e0       	ldi	r27, 0x01	; 1
    1346:	3e d0       	rcall	.+124    	; 0x13c4 <__ultoa_invert+0x9c>
    1348:	b4 e0       	ldi	r27, 0x04	; 4
    134a:	3c d0       	rcall	.+120    	; 0x13c4 <__ultoa_invert+0x9c>
    134c:	67 0f       	add	r22, r23
    134e:	78 1f       	adc	r23, r24
    1350:	89 1f       	adc	r24, r25
    1352:	9a 1f       	adc	r25, r26
    1354:	a1 1d       	adc	r26, r1
    1356:	68 0f       	add	r22, r24
    1358:	79 1f       	adc	r23, r25
    135a:	8a 1f       	adc	r24, r26
    135c:	91 1d       	adc	r25, r1
    135e:	a1 1d       	adc	r26, r1
    1360:	6a 0f       	add	r22, r26
    1362:	71 1d       	adc	r23, r1
    1364:	81 1d       	adc	r24, r1
    1366:	91 1d       	adc	r25, r1
    1368:	a1 1d       	adc	r26, r1
    136a:	20 d0       	rcall	.+64     	; 0x13ac <__ultoa_invert+0x84>
    136c:	09 f4       	brne	.+2      	; 0x1370 <__ultoa_invert+0x48>
    136e:	68 94       	set
    1370:	3f 91       	pop	r19
    1372:	2a e0       	ldi	r18, 0x0A	; 10
    1374:	26 9f       	mul	r18, r22
    1376:	11 24       	eor	r1, r1
    1378:	30 19       	sub	r19, r0
    137a:	30 5d       	subi	r19, 0xD0	; 208
    137c:	31 93       	st	Z+, r19
    137e:	de f6       	brtc	.-74     	; 0x1336 <__ultoa_invert+0xe>
    1380:	cf 01       	movw	r24, r30
    1382:	08 95       	ret
    1384:	46 2f       	mov	r20, r22
    1386:	47 70       	andi	r20, 0x07	; 7
    1388:	40 5d       	subi	r20, 0xD0	; 208
    138a:	41 93       	st	Z+, r20
    138c:	b3 e0       	ldi	r27, 0x03	; 3
    138e:	0f d0       	rcall	.+30     	; 0x13ae <__ultoa_invert+0x86>
    1390:	c9 f7       	brne	.-14     	; 0x1384 <__ultoa_invert+0x5c>
    1392:	f6 cf       	rjmp	.-20     	; 0x1380 <__ultoa_invert+0x58>
    1394:	46 2f       	mov	r20, r22
    1396:	4f 70       	andi	r20, 0x0F	; 15
    1398:	40 5d       	subi	r20, 0xD0	; 208
    139a:	4a 33       	cpi	r20, 0x3A	; 58
    139c:	18 f0       	brcs	.+6      	; 0x13a4 <__ultoa_invert+0x7c>
    139e:	49 5d       	subi	r20, 0xD9	; 217
    13a0:	31 fd       	sbrc	r19, 1
    13a2:	40 52       	subi	r20, 0x20	; 32
    13a4:	41 93       	st	Z+, r20
    13a6:	02 d0       	rcall	.+4      	; 0x13ac <__ultoa_invert+0x84>
    13a8:	a9 f7       	brne	.-22     	; 0x1394 <__ultoa_invert+0x6c>
    13aa:	ea cf       	rjmp	.-44     	; 0x1380 <__ultoa_invert+0x58>
    13ac:	b4 e0       	ldi	r27, 0x04	; 4
    13ae:	a6 95       	lsr	r26
    13b0:	97 95       	ror	r25
    13b2:	87 95       	ror	r24
    13b4:	77 95       	ror	r23
    13b6:	67 95       	ror	r22
    13b8:	ba 95       	dec	r27
    13ba:	c9 f7       	brne	.-14     	; 0x13ae <__ultoa_invert+0x86>
    13bc:	00 97       	sbiw	r24, 0x00	; 0
    13be:	61 05       	cpc	r22, r1
    13c0:	71 05       	cpc	r23, r1
    13c2:	08 95       	ret
    13c4:	9b 01       	movw	r18, r22
    13c6:	ac 01       	movw	r20, r24
    13c8:	0a 2e       	mov	r0, r26
    13ca:	06 94       	lsr	r0
    13cc:	57 95       	ror	r21
    13ce:	47 95       	ror	r20
    13d0:	37 95       	ror	r19
    13d2:	27 95       	ror	r18
    13d4:	ba 95       	dec	r27
    13d6:	c9 f7       	brne	.-14     	; 0x13ca <__ultoa_invert+0xa2>
    13d8:	62 0f       	add	r22, r18
    13da:	73 1f       	adc	r23, r19
    13dc:	84 1f       	adc	r24, r20
    13de:	95 1f       	adc	r25, r21
    13e0:	a0 1d       	adc	r26, r0
    13e2:	08 95       	ret

000013e4 <_exit>:
    13e4:	f8 94       	cli

000013e6 <__stop_program>:
    13e6:	ff cf       	rjmp	.-2      	; 0x13e6 <__stop_program>
